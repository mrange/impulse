     1                                  ; Assemble with: nasm -f bin -o ndemo.com ndemo.asm -l ndemo.lst
     2                                  
     3                                      ; 16-bit code
     4                                      BITS 16
     5                                       ; COM programs start at offset 100h
     6                                      ORG 100h
     7                                  
     8                                  SIN     equ 0
     9                                  COS     equ 4
    10                                  X       equ 8
    11                                  Y       equ 10
    12                                  TIME    equ 12
    13                                  _BITS   equ 14
    14                                  
    15                                  start:
    16                                      ; si seem initialized to 0x100. If we shift right it becomes 0x80
    17                                      ;   Where the command line should be
    18 00000000 D1EE                        shr si, 1
    19                                      ; Set video mode (320x200, 256 colors)
    20 00000002 B013                        mov al, 0x13
    21 00000004 CD10                        int 10h
    22                                  
    23                                      ; Initialize video memory segment
    24 00000006 6800A0                      push 0xA000
    25 00000009 07                          pop es
    26                                  
    27                                  main_loop:
    28                                      ; Load DOS timer
    29 0000000A 64DB066C04                  fild dword fs:[046Ch]
    30                                      ; Load sin cos
    31 0000000F D80E[CA00]                  fmul dword [_0_01]
    32 00000013 D9FB                        fsincos
    33 00000015 D95C04                      fstp dword [si+COS]
    34 00000018 D91C                        fstp dword [si+SIN]
    35                                  
    36                                  m_loop:
    37 0000001A 31D2                        xor dx, dx
    38 0000001C 89F8                        mov ax, di
    39 0000001E B94001                      mov cx, 320
    40 00000021 F7F1                        div cx
    41 00000023 895408                      mov [si+X], dx
    42 00000026 89440A                      mov [si+Y], ax
    43                                  
    44 00000029 DF440A                      fild word [si+Y]
    45 0000002C D80E[CA00]                  fmul dword [_0_01]
    46 00000030 D9E8                        fld1
    47 00000032 DEE9                        fsub
    48                                  
    49 00000034 DF4408                      fild word [si+X]
    50 00000037 D80E[CA00]                  fmul dword [_0_01]
    51 0000003B D826[CE00]                  fsub dword [_1_6]
    52                                  
    53                                      ; Stack
    54                                      ; ST(0) - x
    55                                      ; ST(1) - y
    56                                  
    57 0000003F D9EE                        fldz
    58                                      ; Dupe x/y
    59 00000041 D9C2                        fld  st2
    60 00000043 D9C2                        fld  st2
    61                                  
    62 00000045 B90200                      mov cx, 2
    63                                  a_loop:
    64 00000048 D9C9                        fxch st1
    65 0000004A DE0E[DA00]                  fimul word [_4]
    66 0000004E D9C0                        fld st0
    67 00000050 D9FC                        frndint
    68 00000052 DEE9                        fsubp st1, st0
    69 00000054 D80E[D200]                  fmul dword [_0_25]
    70 00000058 D8C8                        fmul st0
    71 0000005A DCC2                        fadd st2, st0
    72 0000005C E2EA                        loop a_loop
    73                                  
    74 0000005E DDD8                        fstp st0
    75 00000060 DDD8                        fstp st0
    76                                  
    77 00000062 DDDB                        fstp st3
    78                                  
    79 00000064 B90200                      mov cx, 2
    80                                  b_loop:
    81                                      ; Stack
    82                                      ; ST(0) - x
    83                                      ; ST(1) - y
    84                                      ; ST(2) - d
    85                                  
    86                                      ; Add path
    87 00000067 D84404                      fadd dword [si+COS]
    88 0000006A D9C9                        fxch
    89 0000006C D804                        fadd dword [si+SIN]
    90                                  
    91                                      ; dot
    92 0000006E D9C0                        fld st0
    93 00000070 D8C8                        fmul st0
    94 00000072 D9C2                        fld st2
    95 00000074 D8C8                        fmul st0
    96 00000076 DEC1                        fadd
    97                                  
    98                                      ; ST(0) - td
    99                                      ; ST(1) - x
   100                                      ; ST(2) - y
   101                                      ; ST(3) - d
   102                                  
   103                                      ; k = 1/8
   104                                      ; float pmin(float a, float b, float k) {
   105                                      ;   float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );
   106                                      ;   return mix( b, a, h ) - k*h*(1.0-h);
   107                                      ; }
   108                                  
   109                                      ; td-d
   110 00000078 D8E3                        fsub  st3
   111 0000007A D9C0                        fld   st0
   112 0000007C D806[D600]                  fadd  dword [_0_125]
   113 00000080 DE0E[DA00]                  fimul word  [_4]
   114                                  
   115 00000084 D9E8                        fld1
   116 00000086 D8D9                        fcomp
   117 00000088 DFE0                        fnstsw ax
   118 0000008A 9E                          sahf
   119 0000008B 7704                        ja .min1
   120 0000008D DDD8                        fstp st0
   121 0000008F D9E8                        fld1
   122                                  .min1:
   123                                  
   124 00000091 D9E8                        fld1
   125 00000093 D8E1                        fsub st0, st1
   126                                  
   127                                      ; Stack
   128                                      ; ST(0) - 1-h
   129                                      ; ST(1) - h
   130                                      ; ST(2) - td-d
   131                                      ; ST(3) - x
   132                                      ; ST(4) - y
   133                                      ; ST(5) - d
   134                                  
   135                                      ; Compute (1-h)*(td-d)
   136 00000095 D9C0                        fld   st0
   137 00000097 D8CB                        fmul  st3
   138                                      ; Add it to d (now ST(6)
   139 00000099 DEC6                        faddp st6, st0
   140                                      ; Compute (1-h)*h*0.125
   141 0000009B D80E[D600]                  fmul  dword [_0_125]
   142 0000009F DEC9                        fmul
   143                                      ; Subtract from d
   144 000000A1 DEEC                        fsubp st4
   145                                  
   146                                      ; Pop td-d
   147 000000A3 DDD8                        fstp  st0
   148                                  
   149 000000A5 E2C0                        loop b_loop
   150                                  
   151 000000A7 DDD8                        fstp  st0
   152 000000A9 DDD8                        fstp  st0
   153                                  
   154 000000AB D9E0                        fchs
   155                                  
   156                                      ; Hacky colors
   157 000000AD D95C0E                      fstp dword [si+_BITS]
   158 000000B0 8A4411                      mov al, [si+_BITS+3]
   159 000000B3 2C10                        sub al, 16
   160                                      ; Write pixel
   161 000000B5 AA                          stosb
   162                                  
   163                                      ; Clean up stack (if not the DosBox dynamic mode fails)
   164                                  
   165 000000B6 85FF                        test di, di
   166 000000B8 0F855EFF                    jnz m_loop
   167                                  
   168                                      ; Check for keypress to exit
   169 000000BC B401                        mov ah, 1
   170 000000BE CD16                        int 16h
   171 000000C0 0F8446FF                    jz main_loop
   172                                  
   173                                      ; Restore text mode
   174 000000C4 B80300                      mov ax, 0x0003
   175 000000C7 CD10                        int 0x10
   176                                  
   177 000000C9 C3                          ret
   178                                  
   179                                  ; Data section
   180 000000CA 0AD7233C                _0_01       dd  0.01
   181 000000CE CDCCCC3F                _1_6        dd  1.6
   182 000000D2 0000803E                _0_25       dd  0.25
   183 000000D6 0000003E                _0_125      dd  0.125
   184                                  
   185 000000DA 0400                    _4          dw  4
   186                                  

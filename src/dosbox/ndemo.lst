     1                                  ; Assemble with: nasm -f bin -o ndemo.com ndemo.asm -l ndemo.lst
     2                                  
     3                                      ; 16-bit code
     4                                      BITS 16
     5                                       ; COM programs start at offset 100h
     6                                      ORG 100h
     7                                  
     8                                  start:
     9                                      ; Set video mode (320x200, 256 colors)
    10 00000000 B81300                      mov ax, 0013h
    11 00000003 CD10                        int 10h
    12                                  
    13                                      ; Initialize video memory segment
    14 00000005 B800A0                      mov ax, 0A000h
    15 00000008 8EC0                        mov es, ax
    16                                  
    17                                  main_loop:
    18                                      ; Load sin cos
    19 0000000A DF06[F400]                  fild word  [time]
    20 0000000E D80E[E000]                  fmul dword [_0_01]
    21 00000012 D9FB                        fsincos
    22 00000014 D91E[0C00]                  fstp dword [cos]
    23 00000018 D91E[0800]                  fstp dword [sin]
    24                                  
    25                                      ; Reset position to start of video memory
    26 0000001C 31FF                        xor di, di
    27                                  
    28 0000001E C706[0200]C800              mov word [y], 200
    29                                  y_loop:
    30 00000024 C706[0000]4001              mov word [x], 320
    31                                  x_loop:
    32 0000002A DF06[0200]                  fild word [y]
    33 0000002E D80E[E000]                  fmul dword [_0_01]
    34 00000032 D9E8                        fld1
    35 00000034 DEE9                        fsub
    36                                  
    37 00000036 DF06[0000]                  fild word [x]
    38 0000003A D80E[E000]                  fmul dword [_0_01]
    39 0000003E D826[E400]                  fsub dword [_1_6]
    40                                  
    41                                      ; Stack
    42                                      ; ST(0) - x
    43                                      ; ST(1) - y
    44                                  
    45 00000042 D9EE                        fldz
    46                                      ; Dupe x/y
    47 00000044 D9C2                        fld  st2
    48 00000046 D9C2                        fld  st2
    49                                  
    50 00000048 B90200                      mov cx, 2
    51                                  a_loop:
    52 0000004B D9C9                        fxch st1
    53 0000004D D80E[E800]                  fmul dword [_4]
    54 00000051 D9C0                        fld st0
    55 00000053 D9FC                        frndint
    56 00000055 DEE9                        fsubp st1, st0
    57 00000057 D80E[EC00]                  fmul dword [_0_25]
    58 0000005B D8C8                        fmul st0
    59 0000005D DCC2                        fadd st2, st0
    60 0000005F E2EA                        loop a_loop
    61                                  
    62 00000061 DDD8                        fstp st0
    63 00000063 DDD8                        fstp st0
    64                                  
    65 00000065 DDDB                        fstp st3
    66                                  
    67 00000067 B90200                      mov cx, 2
    68                                  b_loop:
    69                                      ; Stack
    70                                      ; ST(0) - x
    71                                      ; ST(1) - y
    72                                      ; ST(2) - d
    73                                  
    74                                      ; Add path
    75 0000006A D806[0C00]                  fadd dword [cos]
    76 0000006E D9C9                        fxch
    77 00000070 D806[0800]                  fadd dword [sin]
    78                                  
    79                                      ; dot
    80 00000074 D9C0                        fld st0
    81 00000076 D8C8                        fmul st0
    82 00000078 D9C2                        fld st2
    83 0000007A D8C8                        fmul st0
    84 0000007C DEC1                        fadd
    85                                  
    86                                      ; ST(0) - td
    87                                      ; ST(1) - x
    88                                      ; ST(2) - y
    89                                      ; ST(3) - d
    90                                  
    91                                      ; k = 1/8
    92                                      ; float pmin(float a, float b, float k) {
    93                                      ;   float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );
    94                                      ;   return mix( b, a, h ) - k*h*(1.0-h);
    95                                      ; }
    96                                  
    97                                      ; td-d
    98 0000007E D8E3                        fsub  st3
    99 00000080 D9C0                        fld   st0
   100 00000082 D806[F000]                  fadd  dword [_0_125]
   101 00000086 D80E[E800]                  fmul  dword [_4]
   102                                  
   103 0000008A D9E8                        fld1
   104 0000008C D8D9                        fcomp
   105 0000008E 9BDFE0                      fstsw ax
   106 00000091 9E                          sahf
   107 00000092 7704                        ja .min1
   108 00000094 DDD8                        fstp st0
   109 00000096 D9E8                        fld1
   110                                  .min1:
   111                                  
   112 00000098 D9E8                        fld1
   113 0000009A D8E1                        fsub st0, st1
   114                                  
   115                                      ; Stack
   116                                      ; ST(0) - 1-h
   117                                      ; ST(1) - h
   118                                      ; ST(2) - td-d
   119                                      ; ST(3) - x
   120                                      ; ST(4) - y
   121                                      ; ST(5) - d
   122                                  
   123                                      ; Compute (1-h)*(td-d)
   124 0000009C D9C0                        fld   st0
   125 0000009E D8CB                        fmul  st3
   126                                      ; Add it to d (now ST(6)
   127 000000A0 DEC6                        faddp st6, st0
   128                                      ; Compute (1-h)*h*0.125
   129 000000A2 D80E[F000]                  fmul  dword [_0_125]
   130 000000A6 DEC9                        fmul
   131                                      ; Subtract from d
   132 000000A8 DEEC                        fsubp st4
   133                                  
   134                                      ; Pop td-d
   135 000000AA DDD8                        fstp  st0
   136                                  
   137 000000AC E2BC                        loop b_loop
   138                                  
   139 000000AE DDD8                        fstp  st0
   140 000000B0 DDD8                        fstp  st0
   141                                  
   142 000000B2 D9E0                        fchs
   143                                  
   144                                      ; Hacky colors
   145 000000B4 D91E[0400]                  fstp dword [_bits]
   146 000000B8 A0[0700]                    mov al, [_bits+3]
   147 000000BB 2C10                        sub al,16
   148                                      ; Write pixel
   149 000000BD AA                          stosb
   150                                  
   151                                      ; Clean up stack (if not the DosBox dynamic mode fails)
   152                                  
   153 000000BE FF0E[0000]                  dec word [x]
   154 000000C2 0F8564FF                    jnz x_loop
   155                                  
   156 000000C6 FF0E[0200]                  dec word [y]
   157 000000CA 0F8556FF                    jnz y_loop
   158                                  
   159 000000CE FF06[F400]                  inc word [time]
   160                                  
   161                                      ; Check for keypress to exit
   162 000000D2 B401                        mov ah, 1
   163 000000D4 CD16                        int 16h
   164 000000D6 0F8430FF                    jz main_loop
   165                                  
   166                                      ; Restore text mode
   167 000000DA B80300                      mov ax, 0x0003
   168 000000DD CD10                        int 0x10
   169                                  
   170 000000DF C3                          ret
   171                                  
   172                                  ; Data section
   173 000000E0 0AD7233C                _0_01       dd  0.01
   174 000000E4 CDCCCC3F                _1_6        dd  1.6
   175 000000E8 00008040                _4          dd  4.0
   176 000000EC 0000803E                _0_25       dd  0.25
   177 000000F0 0000003E                _0_125      dd  0.125
   178                                  
   179 000000F4 0000                    time        dw  0
   180                                  
   181                                  section .bss
   182 00000000 ????                    x           resb 2
   183 00000002 ????                    y           resb 2
   184                                  
   185 00000004 ????????                _bits       resb 4
   186 00000008 ????????                sin         resb 4
   187 0000000C ????????                cos         resb 4
   188                                  

     1                                  ; Assemble with: nasm -f bin -o demo.com demo.asm -l demo.lst
     2                                  
     3                                      ; 16-bit code
     4                                      BITS 16
     5                                       ; COM programs start at offset 100h
     6                                      ORG 100h
     7                                  
     8                                  start:
     9                                      ; Set video mode (320x200, 256 colors)
    10 00000000 B81300                      mov ax, 0013h
    11 00000003 CD10                        int 10h
    12                                  
    13                                      ; Initialize video memory segment
    14 00000005 B800A0                      mov ax, 0A000h
    15 00000008 8EC0                        mov es, ax
    16                                  
    17                                  main_loop:
    18                                      ; Load sin cos
    19 0000000A DF06[F400]                  fild word  [time]
    20 0000000E D80E[E800]                  fmul dword [_0_005]
    21 00000012 D9FB                        fsincos
    22 00000014 D91E[0C00]                  fstp dword [cos]
    23 00000018 D91E[0800]                  fstp dword [sin]
    24                                  
    25                                      ; Reset position to start of video memory
    26 0000001C 31FF                        xor di, di
    27                                  
    28 0000001E C706[0200]C800              mov word [y], 200
    29                                  y_loop:
    30 00000024 C706[0000]4001              mov word [x], 320
    31                                  x_loop:
    32                                      ; PUSH 0.005
    33 0000002A D906[E800]                  fld dword [_0_005]
    34                                  
    35                                      ; Z (0.5)
    36 0000002E D906[EC00]                  fld dword [_0_5]
    37                                  
    38 00000032 DF06[0200]                  fild word [y]
    39 00000036 D8CA                        fmul st2
    40 00000038 D9C1                        fld st1
    41 0000003A DEE9                        fsub
    42                                  
    43 0000003C DF06[0000]                  fild word [x]
    44 00000040 D8CB                        fmul st3
    45 00000042 D826[F000]                  fsub dword [_0_8]
    46                                  
    47                                      ; expected stack
    48                                      ; ST(0) x
    49                                      ; ST(1) y
    50                                      ; ST(2) z
    51                                      ; ST(3) 0.005
    52                                  
    53 00000046 B80300                      mov ax, 3
    54                                  t_loop:
    55 00000049 D9CA                        fxch st2
    56 0000004B D9C9                        fxch st1
    57                                  
    58                                      ; y' = y*cos - x*sin
    59 0000004D D9C1                        fld     st1
    60 0000004F D80E[0C00]                  fmul dword [cos]
    61 00000053 D9C1                        fld     st1
    62 00000055 D80E[0800]                  fmul dword [sin]
    63 00000059 DEE9                        fsub
    64                                  
    65                                      ; x' = x*cos + y*sin
    66 0000005B D9C1                        fld     st1
    67 0000005D D80E[0C00]                  fmul dword [cos]
    68 00000061 D9C3                        fld     st3
    69 00000063 D80E[0800]                  fmul dword [sin]
    70 00000067 DEC1                        fadd
    71                                  
    72                                      ; Overwrite x with x'
    73 00000069 DDDA                        fstp    st2
    74                                      ; Overwrite y with y'
    75 0000006B DDDA                        fstp    st2
    76                                  
    77 0000006D 48                          dec ax
    78 0000006E 75D9                        jnz t_loop
    79                                  
    80                                      ; Scale
    81 00000070 D9E8                        fld1
    82 00000072 DDDC                        fstp st4
    83                                  
    84                                      ; expected stack
    85                                      ; ST(0) x
    86                                      ; ST(1) y
    87                                      ; ST(2) z
    88                                      ; ST(3) scale
    89                                  
    90                                      ; Appollian loop
    91 00000074 B80400                      mov ax,4
    92                                  a_loop:
    93                                      ; p -= 2.*round(0.5*p);
    94                                  
    95 00000077 BB0300                      mov bx,3
    96                                  r_loop:
    97                                      ; Rotate ST(0..2)
    98 0000007A D9CA                        fxch st2
    99 0000007C D9C9                        fxch st1
   100                                      ; Dupe
   101 0000007E D9C0                        fld     st0
   102                                      ; Divide by 2
   103 00000080 D80E[EC00]                  fmul dword [_0_5]
   104 00000084 D9FC                        frndint
   105                                      ; Multiply by 2
   106 00000086 D8C0                        fadd    st0
   107 00000088 DEE9                        fsub
   108 0000008A 4B                          dec bx
   109 0000008B 75ED                        jnz r_loop
   110                                  
   111                                      ; dot(p,p)
   112                                      ; Dupe x
   113 0000008D D9C0                        fld     st0
   114 0000008F D8C8                        fmul    st0
   115                                  
   116                                      ; Dupe y
   117 00000091 D9C2                        fld     st2
   118 00000093 D8C8                        fmul    st0
   119                                  
   120 00000095 DEC1                        fadd
   121                                  
   122                                      ; Dupe z
   123 00000097 D9C3                        fld     st3
   124 00000099 D8C8                        fmul    st0
   125                                  
   126 0000009B DEC1                        fadd
   127                                  
   128                                      ; k = 1/dot(p,p)
   129 0000009D D9E8                        fld1
   130 0000009F D8C0                        fadd    st0
   131 000000A1 DEF1                        fdivr
   132                                  
   133                                      ; p *= k
   134 000000A3 DCC9                        fmul    st1,st0
   135 000000A5 DCCA                        fmul    st2,st0
   136 000000A7 DCCB                        fmul    st3,st0
   137                                      ; scale *= k
   138 000000A9 DCCC                        fmul    st4,st0
   139                                  
   140                                      ; Pop k
   141 000000AB DDD8                        fstp    st0
   142                                  
   143 000000AD 48                          dec ax
   144 000000AE 75C7                        jnz a_loop
   145                                  
   146                                      ; Compute distance
   147 000000B0 D9E1                        fabs
   148 000000B2 D8F3                        fdiv    st3
   149                                  
   150                                      ; Hacky colors
   151 000000B4 D916[0400]                  fst dword [_bits]
   152 000000B8 A0[0700]                    mov al, [_bits+3]
   153 000000BB 2C10                        sub al,16
   154                                  
   155                                      ; Write pixel
   156 000000BD AA                          stosb
   157                                  
   158                                      ; Clean up stack (if not the DosBox dynamic mode fails)
   159 000000BE DDD8                        fstp st0
   160 000000C0 DDD8                        fstp st0
   161 000000C2 DDD8                        fstp st0
   162 000000C4 DDD8                        fstp st0
   163                                  
   164 000000C6 FF0E[0000]                  dec word [x]
   165 000000CA 0F855CFF                    jnz x_loop
   166                                  
   167 000000CE FF0E[0200]                  dec word [y]
   168 000000D2 0F854EFF                    jnz y_loop
   169                                  
   170 000000D6 FF06[F400]                  inc word [time]
   171                                  
   172                                      ; Check for keypress to exit
   173 000000DA B401                        mov ah, 1
   174 000000DC CD16                        int 16h
   175 000000DE 0F8428FF                    jz main_loop
   176                                  
   177                                      ; Restore text mode
   178 000000E2 B80300                      mov ax, 0x0003
   179 000000E5 CD10                        int 0x10
   180                                  
   181 000000E7 C3                          ret
   182                                  
   183                                  ; Data section
   184 000000E8 0AD7A33B                _0_005      dd  0.005
   185 000000EC 0000003F                _0_5        dd  0.5
   186 000000F0 CDCC4C3F                _0_8        dd  0.8
   187                                  
   188 000000F4 0000                    time        dw  0
   189                                  
   190                                  section .bss
   191 00000000 ????                    x           resb 2
   192 00000002 ????                    y           resb 2
   193                                  
   194 00000004 ????????                _bits       resb 4
   195 00000008 ????????                sin         resb 4
   196 0000000C ????????                cos         resb 4
   197                                  

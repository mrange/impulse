     1                                  ; Assemble with: nasm -f bin -o sound.com sound.asm -l sound.lst
     2                                  
     3                                      bits 16         ; 16-bit real mode
     4                                      org 100h        ; COM file format starts at 100h
     5                                  
     6                                  section .text
     7                                  start:
     8                                      ; Set up the timer (channel 2)
     9 00000000 B0B6                        mov al, 10110110b    ; Channel 2, mode 3 (square wave), binary
    10 00000002 E643                        out 43h, al
    11                                  
    12                                      ; Turn on the speaker by setting bits 0 and 1 of port 61h
    13 00000004 E461                        in al, 61h           ; Read current value
    14 00000006 0C03                        or al, 3             ; Set bits 0 and 1
    15 00000008 E661                        out 61h, al          ; Write back to enable speaker
    16                                  
    17 0000000A 6631DB                      xor ebx, ebx
    18                                  
    19                                  main_loop:
    20 0000000D 6689D8                      mov eax, ebx
    21 00000010 66C1E80C                    shr eax, 12
    22 00000014 6689C1                      mov ecx, eax
    23 00000017 6689D8                      mov eax, ebx
    24 0000001A 66C1E808                    shr eax, 8
    25 0000001E 6609C1                      or  ecx, eax
    26 00000021 6683E12A                    and ecx, 42
    27 00000025 6683C16E                    add ecx, 110
    28                                  
    29                                      ; Calculate frequency value (middle C = 262 Hz)
    30                                      ; PIT frequency is 1193180 Hz
    31 00000029 6631D2                      xor edx, edx
    32 0000002C 66B8DC341200                mov eax, 1193180
    33 00000032 66F7F1                      div ecx               ; Result in AX = 1193180 / 262
    34                                  
    35                                      ; Send the frequency value to the timer
    36 00000035 E642                        out 42h, al          ; Send low byte
    37 00000037 88E0                        mov al, ah
    38 00000039 E642                        out 42h, al          ; Send high byte
    39                                  
    40 0000003B 66B950460000                mov ecx, 18000
    41                                  .wait:
    42 00000041 6649                        dec ecx
    43 00000043 75FC                        jnz .wait
    44                                  
    45 00000045 6681C390010000              add ebx, 400
    46                                  
    47                                      ; Check for keypress to exit
    48 0000004C B401                        mov ah, 1
    49 0000004E CD16                        int 16h
    50 00000050 74BB                        jz main_loop
    51                                  
    52                                      ; Turn off the speaker
    53 00000052 E461                        in al, 61h           ; Read current value
    54 00000054 24FC                        and al, 11111100b    ; Clear bits 0 and 1
    55 00000056 E661                        out 61h, al          ; Write back to disable speaker
    56                                  
    57                                      ; Exit program
    58 00000058 B8004C                      mov ax, 4C00h        ; DOS function: exit program
    59 0000005B CD21                        int 21h              ; Call DOS
    60                                  
    61                                  
    62 0000005D 0B000000                a   dd  11
    63 00000061 11000000                b   dd  17
    64 00000065 0D000000                c   dd  13

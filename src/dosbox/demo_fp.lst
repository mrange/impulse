     1                                  ; Assemble with: nasm -f bin -o demo_fp.com demo_fp.asm -l demo_fp.lst
     2                                  
     3                                      ; 16-bit code
     4                                      BITS 16
     5                                       ; COM programs start at offset 100h
     6                                      ORG 100h
     7                                  
     8                                  
     9                                  start:
    10 00000000 668D3E[1E14]                lea edi, [sine_table+1279*4]
    11                                  
    12                                  init_loop:
    13 00000005 DF06[1E00]                  fild word   [time]
    14 00000009 D80E[1000]                  fmul dword  [tau_1024]
    15 0000000D D9FE                        fsin
    16 0000000F D80E[1400]                  fmul dword  [to16_16]
    17 00000013 67DB1F                      fistp dword [edi]
    18 00000016 6683EF04                    sub edi, 4
    19 0000001A FF0E[1E00]                  dec word    [time]
    20 0000001E 75E5                        jnz init_loop
    21                                  
    22                                      ; Set video mode (320x200, 256 colors)
    23 00000020 B81300                      mov ax, 0013h
    24 00000023 CD10                        int 10h
    25                                  
    26                                      ; Initialize video memory segment
    27 00000025 B800A0                      mov ax, 0A000h
    28 00000028 8EC0                        mov es, ax
    29                                  
    30                                  main_loop:
    31 0000002A FF06[1E00]                  inc word [time]
    32                                  
    33 0000002E C706[2000]0000              mov word [screen], 0
    34 00000034 C706[1C00]C800              mov word [y], 200
    35                                  y_loop:
    36 0000003A C706[1A00]4001              mov word [x], 320
    37                                  x_loop:
    38                                      ; eax, edx compute
    39                                      ; ebx - X
    40                                      ; ecx - Y
    41                                      ; esi - Z
    42                                      ; edi - Scale
    43                                  
    44 00000040 668B36[0C00]                mov   esi, [_0_005]
    45                                  
    46 00000045 A1[1A00]                    mov   ax , [x]
    47 00000048 66C1E010                    shl   eax, 16
    48 0000004C 66F7EE                      imul  esi
    49 0000004F 660FACD010                  shrd  eax, edx, 16
    50 00000054 662B06[0400]                sub   eax, [_0_8]
    51 00000059 6689C3                      mov   ebx, eax
    52                                  
    53 0000005C A1[1C00]                    mov   ax , [y]
    54 0000005F 66C1E010                    shl   eax, 16
    55 00000063 66F7EE                      imul  esi
    56 00000066 660FACD010                  shrd  eax, edx, 16
    57 0000006B 662B06[0800]                sub   eax, [_0_5]
    58 00000070 6689C1                      mov   ecx, eax
    59                                  
    60 00000073 668B36[0800]                mov   esi, [_0_5]
    61                                  
    62 00000078 668B3E[1E00]                mov   edi, [time]
    63 0000007D 6681E7FF030000              and   edi, 0x3FF
    64 00000084 66678D3CBD-                 lea   edi, [sine_table+edi*4]
    64 00000089 [22000000]         
    65                                  
    66 0000008D C706[1800]0300              mov word [a], 3
    67                                  r_loop:
    68 00000093 6689DD                      mov   ebp, ebx
    69 00000096 6689CB                      mov   ebx, ecx
    70 00000099 6689F1                      mov   ecx, esi
    71 0000009C 6689EE                      mov   esi, ebp
    72                                      ; 'x = x*cos+y*sin
    73                                      ; 'y = y*cos-x*sin
    74 0000009F 6689D8                      mov   eax, ebx
    75 000000A2 6667F7AF00040000            imul  dword [edi+1024]
    76 000000AA 660FACD010                  shrd  eax, edx, 16
    77 000000AF 6689C5                      mov   ebp, eax
    78                                  
    79 000000B2 6689C8                      mov   eax, ecx
    80 000000B5 6667F72F                    imul  dword [edi]
    81 000000B9 660FACD010                  shrd  eax, edx, 16
    82 000000BE 6601C5                      add   ebp, eax
    83                                  
    84 000000C1 6689C8                      mov   eax, ecx
    85 000000C4 6667F7AF00040000            imul  dword [edi+1024]
    86 000000CC 660FACD010                  shrd  eax, edx, 16
    87 000000D1 6689C1                      mov   ecx, eax
    88                                  
    89 000000D4 6689D8                      mov   eax, ebx
    90 000000D7 6667F72F                    imul  dword [edi]
    91 000000DB 660FACD010                  shrd  eax, edx, 16
    92 000000E0 6629C1                      sub   ecx, eax
    93                                  
    94 000000E3 6689EB                      mov   ebx, ebp
    95                                  
    96 000000E6 FF0E[1800]                  dec word [a]
    97 000000EA 75A7                        jnz r_loop
    98                                  
    99                                      ; Scale
   100 000000EC 668B3E[0000]                mov   edi, [_1]
   101                                  
   102 000000F1 C706[1800]0400              mov   word [a], 4
   103                                  a_loop:
   104                                      ; p -= 2*round(0.5*p)
   105 000000F7 6689D8                      mov   eax, ebx
   106 000000FA 66D1E8                      shr   eax, 1
   107 000000FD 660306[0800]                add   eax, [_0_5]
   108 00000102 66250000FFFF                and   eax, 0FFFF0000h
   109 00000108 6601C0                      add   eax, eax
   110 0000010B 6629C3                      sub   ebx, eax
   111                                  
   112 0000010E 6689C8                      mov   eax, ecx
   113 00000111 66D1E8                      shr   eax, 1
   114 00000114 660306[0800]                add   eax, [_0_5]
   115 00000119 66250000FFFF                and   eax, 0FFFF0000h
   116 0000011F 6601C0                      add   eax, eax
   117 00000122 6629C1                      sub   ecx, eax
   118                                  
   119 00000125 6689F0                      mov   eax, esi
   120 00000128 66D1E8                      shr   eax, 1
   121 0000012B 660306[0800]                add   eax, [_0_5]
   122 00000130 66250000FFFF                and   eax, 0FFFF0000h
   123 00000136 6601C0                      add   eax, eax
   124 00000139 6629C6                      sub   esi, eax
   125                                  
   126                                      ; r2 = dot(p,p)
   127 0000013C 6689D8                      mov   eax, ebx
   128 0000013F 66F7E8                      imul  eax
   129 00000142 660FACD010                  shrd  eax, edx, 16
   130 00000147 6689C5                      mov   ebp, eax
   131                                  
   132 0000014A 6689C8                      mov   eax, ecx
   133 0000014D 66F7E8                      imul  eax
   134 00000150 660FACD010                  shrd  eax, edx, 16
   135 00000155 6601C5                      add   ebp, eax
   136                                  
   137 00000158 6689F0                      mov   eax, esi
   138 0000015B 66F7E8                      imul  eax
   139 0000015E 660FACD010                  shrd  eax, edx, 16
   140 00000163 6601C5                      add   ebp, eax
   141                                  
   142                                      ; To avoid overflows
   143 00000166 6683C508                    add   ebp, 8
   144                                  
   145                                      ; k = 1/r2
   146 0000016A 6631C0                      xor   eax, eax
   147 0000016D 66BA02000000                mov   edx, 2
   148 00000173 66F7FD                      idiv  ebp
   149 00000176 6689C5                      mov   ebp, eax
   150                                  
   151                                      ; p *= k
   152 00000179 6689D8                      mov   eax, ebx
   153 0000017C 66F7ED                      imul  ebp
   154 0000017F 660FACD010                  shrd  eax, edx, 16
   155 00000184 6689C3                      mov   ebx, eax
   156                                  
   157 00000187 6689C8                      mov   eax, ecx
   158 0000018A 66F7ED                      imul  ebp
   159 0000018D 660FACD010                  shrd  eax, edx, 16
   160 00000192 6689C1                      mov   ecx, eax
   161                                  
   162 00000195 6689F0                      mov   eax, esi
   163 00000198 66F7ED                      imul  ebp
   164 0000019B 660FACD010                  shrd  eax, edx, 16
   165 000001A0 6689C6                      mov   esi, eax
   166                                  
   167                                      ; scale *= k
   168 000001A3 6689F8                      mov   eax, edi
   169 000001A6 66F7ED                      imul  ebp
   170 000001A9 660FACD010                  shrd  eax, edx, 16
   171 000001AE 6689C7                      mov   edi, eax
   172                                  .skip:
   173 000001B1 FF0E[1800]                  dec word [a]
   174 000001B5 0F853EFF                    jnz a_loop
   175                                  
   176                                      ; To avoid overflows
   177 000001B9 6683C708                    add edi, 8
   178                                  
   179 000001BD 6631D2                      xor   edx, edx
   180 000001C0 6689D8                      mov   eax,ebx
   181 000001C3 6685C0                      test  eax,eax
   182 000001C6 7D03                        jge   .abs
   183 000001C8 66F7D8                      neg   eax
   184                                  .abs:
   185 000001CB 660FA4C210                  shld  edx, eax, 16
   186 000001D0 66C1E010                    shl   eax, 16
   187 000001D4 66F7FF                      idiv  edi
   188                                  
   189 000001D7 660FBDD8                    bsr   ebx, eax
   190 000001DB 6683C320                    add   ebx, 0x20
   191                                  
   192 000001DF 663B06[0C00]                cmp   eax, [_0_005]
   193 000001E4 7F03                        jg    .outside
   194 000001E6 6631DB                      xor   ebx, ebx
   195                                  .outside:
   196                                  
   197 000001E9 6689D8                      mov   eax, ebx
   198                                  
   199 000001EC 8B3E[2000]                  mov di, [screen]
   200                                      ; Write pixel
   201 000001F0 AA                          stosb
   202 000001F1 893E[2000]                  mov [screen],di
   203                                  
   204 000001F5 FF0E[1A00]                  dec word [x]
   205 000001F9 0F8543FE                    jnz x_loop
   206                                  
   207 000001FD FF0E[1C00]                  dec word [y]
   208 00000201 0F8535FE                    jnz y_loop
   209                                  
   210                                      ; Check for keypress to exit
   211 00000205 B401                        mov ah, 1
   212 00000207 CD16                        int 16h
   213 00000209 0F841DFE                    jz main_loop
   214                                  
   215 0000020D C3                          ret
   216                                  
   217                                  ; Data section
   218                                  section .data
   219 00000000 00000100                _1          dd  0x00010000
   220 00000004 CCCC0000                _0_8        dd  0x0000CCCC
   221 00000008 00800000                _0_5        dd  0x00008000
   222 0000000C 47010000                _0_005      dd  0x00000147
   223 00000010 DB0FC93B                tau_1024    dd  0.00613592315154256491887235035797
   224 00000014 00008047                to16_16     dd  65536.0
   225                                  
   226 00000018 0000                    a           dw  0
   227 0000001A 0000                    x           dw  0
   228 0000001C 0000                    y           dw  0
   229 0000001E FF04                    time        dw  1279
   230 00000020 0000                    screen      dw  0
   231                                  
   232 00000022 0000                    sine_table  dw  0

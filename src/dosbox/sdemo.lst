     1                                  ; Assemble with: nasm -f bin -o sdemo.com sdemo.asm -l sdemo.lst
     2                                  
     3                                      ; 16-bit code
     4                                      BITS 16
     5                                       ; COM programs start at offset 100h
     6                                      ORG 100h
     7                                  
     8                                  start:
     9                                      ; Set video mode (320x200, 256 colors)
    10 00000000 B81300                      mov ax, 0013h
    11 00000003 CD10                        int 10h
    12                                  
    13                                      ; Set up the timer (channel 2)
    14 00000005 B0B6                        mov al, 10110110b    ; Channel 2, mode 3 (square wave), binary
    15 00000007 E643                        out 43h, al
    16                                  
    17                                      ; Enable speaker
    18 00000009 B033                        mov al, 33h
    19 0000000B E661                        out 61h, al
    20                                  
    21                                      ; Initialize video memory segment
    22 0000000D B800A0                      mov ax, 0A000h
    23 00000010 8EC0                        mov es, ax
    24                                  
    25                                  main_loop:
    26                                      ; Load sin cos
    27 00000012 DF06[FD00]                  fild word  [time]
    28 00000016 D80E[F100]                  fmul dword [_0_005]
    29 0000001A D9FB                        fsincos
    30 0000001C D91E[0C00]                  fstp dword [cos]
    31 00000020 D91E[0800]                  fstp dword [sin]
    32                                  
    33                                      ; Reset position to start of video memory
    34 00000024 31FF                        xor di, di
    35                                  
    36 00000026 C706[0200]C800              mov word [y], 200
    37                                  y_loop:
    38 0000002C C706[0000]4001              mov word [x], 320
    39                                  x_loop:
    40                                      ; Z (0.5)
    41 00000032 D906[F500]                  fld dword [_0_5]
    42                                  
    43 00000036 DF06[0200]                  fild word [y]
    44 0000003A D80E[F100]                  fmul dword [_0_005]
    45 0000003E D9C1                        fld st1
    46 00000040 DEE9                        fsub
    47                                  
    48 00000042 DF06[0000]                  fild word [x]
    49 00000046 D80E[F100]                  fmul dword [_0_005]
    50 0000004A D826[F900]                  fsub dword [_0_8]
    51                                  
    52                                      ; expected stack
    53                                      ; ST(0) x
    54                                      ; ST(1) y
    55                                      ; ST(2) z
    56                                  
    57 0000004E B90300                      mov cx, 3
    58                                  t_loop:
    59 00000051 D9CA                        fxch st2
    60 00000053 D9C9                        fxch st1
    61                                  
    62                                      ; y' = y*cos - x*sin
    63 00000055 D9C1                        fld     st1
    64 00000057 D80E[0C00]                  fmul dword [cos]
    65 0000005B D9C1                        fld     st1
    66 0000005D D80E[0800]                  fmul dword [sin]
    67 00000061 DEE9                        fsub
    68                                  
    69                                      ; x' = x*cos + y*sin
    70 00000063 D9C1                        fld     st1
    71 00000065 D80E[0C00]                  fmul dword [cos]
    72 00000069 D9C3                        fld     st3
    73 0000006B D80E[0800]                  fmul dword [sin]
    74 0000006F DEC1                        fadd
    75                                  
    76                                      ; Overwrite x with x'
    77 00000071 DDDA                        fstp    st2
    78                                      ; Overwrite y with y'
    79 00000073 DDDA                        fstp    st2
    80                                  
    81 00000075 E2DA                        loop t_loop
    82                                  
    83                                      ; Scale
    84 00000077 D9E8                        fld1
    85 00000079 DDDC                        fstp st4
    86                                  
    87                                      ; expected stack
    88                                      ; ST(0) x
    89                                      ; ST(1) y
    90                                      ; ST(2) z
    91                                      ; ST(3) scale
    92                                  
    93                                      ; Appollian loop
    94 0000007B B80400                      mov ax,4
    95                                  a_loop:
    96                                      ; p -= 2.*round(0.5*p);
    97 0000007E D9EE                        fldz
    98 00000080 DDDD                        fstp st5
    99                                  
   100 00000082 B90300                      mov cx,3
   101                                  r_loop:
   102                                      ; Rotate ST(0..2)
   103 00000085 D9CA                        fxch st2
   104 00000087 D9C9                        fxch st1
   105                                      ; Dupe
   106 00000089 D9C0                        fld     st0
   107                                      ; Divide by 2
   108 0000008B D80E[F500]                  fmul dword [_0_5]
   109 0000008F D9FC                        frndint
   110                                      ; Multiply by 2
   111 00000091 D8C0                        fadd    st0
   112 00000093 DEE9                        fsub
   113                                  
   114 00000095 D9C0                        fld     st0
   115 00000097 D8C8                        fmul    st0
   116 00000099 DEC5                        faddp   st5, st0
   117                                  
   118 0000009B E2E8                        loop r_loop
   119                                  
   120                                      ; k = 2/dot(p,p)
   121 0000009D D9E8                        fld1
   122 0000009F D8C0                        fadd    st0
   123 000000A1 D8F5                        fdiv    st5
   124                                  
   125                                      ; p *= k
   126 000000A3 DCC9                        fmul    st1,st0
   127 000000A5 DCCA                        fmul    st2,st0
   128 000000A7 DCCB                        fmul    st3,st0
   129                                      ; scale *= k
   130 000000A9 DCCC                        fmul    st4,st0
   131                                  
   132                                      ; Pop k
   133 000000AB DDD8                        fstp    st0
   134                                  
   135 000000AD 48                          dec ax
   136 000000AE 75CE                        jnz a_loop
   137                                  
   138                                      ; Compute distance
   139 000000B0 D9E1                        fabs
   140 000000B2 D8F3                        fdiv    st3
   141                                  
   142                                      ; Hacky colors
   143 000000B4 D916[0400]                  fst dword [_bits]
   144 000000B8 A0[0700]                    mov al, [_bits+3]
   145 000000BB 2C10                        sub al,16
   146                                      ; Write pixel
   147 000000BD AA                          stosb
   148                                  
   149                                      ; Clean up stack (if not the DosBox dynamic mode fails)
   150 000000BE DDD8                        fstp st0
   151 000000C0 DDD8                        fstp st0
   152 000000C2 DDD8                        fstp st0
   153                                  
   154 000000C4 FF0E[0000]                  dec word [x]
   155 000000C8 0F8566FF                    jnz x_loop
   156                                  
   157 000000CC FF0E[0200]                  dec word [y]
   158 000000D0 0F8558FF                    jnz y_loop
   159                                  
   160                                      ; Increment audio
   161 000000D4 81C38303                    add bx, 899
   162                                  ;    add bx, 83
   163                                  ;    add bx, 13
   164                                  ;    add bx, 229
   165                                  ;    add bx, 1499
   166 000000D8 89D8                        mov ax, bx
   167 000000DA E642                        out 42h, al
   168 000000DC 88C4                        mov ah, al
   169 000000DE E642                        out 42h, al
   170                                  
   171                                  
   172 000000E0 FF06[FD00]                  inc word [time]
   173                                  
   174                                      ; Check for keypress to exit
   175 000000E4 B401                        mov ah, 1
   176 000000E6 CD16                        int 16h
   177 000000E8 0F8426FF                    jz main_loop
   178                                  
   179                                      ; Turn off the speaker
   180 000000EC B030                        mov al, 30h
   181 000000EE E661                        out 61h, al
   182                                  
   183 000000F0 C3                          ret
   184                                  
   185                                  ; Data section
   186 000000F1 0AD7A33B                _0_005      dd  0.005
   187 000000F5 0000003F                _0_5        dd  0.5
   188 000000F9 CDCC4C3F                _0_8        dd  0.8
   189 000000FD 0000                    time        dw  0
   190                                  
   191                                  section .bss
   192 00000000 ????                    x           resb 2
   193 00000002 ????                    y           resb 2
   194                                  
   195 00000004 ????????                _bits       resb 4
   196 00000008 ????????                sin         resb 4
   197 0000000C ????????                cos         resb 4
   198                                  

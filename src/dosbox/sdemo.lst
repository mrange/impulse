     1                                  ; Assemble with: nasm -f bin -o sdemo.com sdemo.asm -l sdemo.lst
     2                                  
     3                                      ; 16-bit code
     4                                      BITS 16
     5                                       ; COM programs start at offset 100h
     6                                      ORG 100h
     7                                  
     8                                  start:
     9                                      ; Set video mode (320x200, 256 colors)
    10 00000000 B81300                      mov ax, 0013h
    11 00000003 CD10                        int 10h
    12                                  
    13                                      ; Set up the timer (channel 2)
    14                                      ; mov al, 10110110b    ; Channel 2, mode 3 (square wave), binary
    15                                      ; out 43h, al
    16                                  
    17                                      ; Enable speaker
    18 00000005 B033                        mov al, 33h
    19 00000007 E661                        out 61h, al
    20                                  
    21                                      ; Initialize video memory segment
    22 00000009 B800A0                      mov ax, 0A000h
    23 0000000C 8EC0                        mov es, ax
    24                                  
    25                                  main_loop:
    26                                      ; Load sin cos
    27 0000000E DF06[0000]                  fild word  [time]
    28 00000012 D80E[EB00]                  fmul dword [_0_005]
    29 00000016 D9FB                        fsincos
    30 00000018 D91E[0E00]                  fstp dword [cos]
    31 0000001C D91E[0A00]                  fstp dword [sin]
    32                                  
    33                                      ; Reset position to start of video memory
    34 00000020 31FF                        xor di, di
    35                                  
    36                                      ; Audio reset
    37 00000022 31C9                        xor cx, cx
    38                                  
    39 00000024 C706[0400]C800              mov word [y], 200
    40                                  y_loop:
    41 0000002A C706[0200]4001              mov word [x], 320
    42                                  x_loop:
    43                                      ; Z (0.5)
    44 00000030 D906[EF00]                  fld dword [_0_5]
    45                                  
    46 00000034 DF06[0400]                  fild word [y]
    47 00000038 D80E[EB00]                  fmul dword [_0_005]
    48 0000003C D9C1                        fld st1
    49 0000003E DEE9                        fsub
    50                                  
    51 00000040 DF06[0200]                  fild word [x]
    52 00000044 D80E[EB00]                  fmul dword [_0_005]
    53 00000048 D826[F300]                  fsub dword [_0_8]
    54                                  
    55                                      ; expected stack
    56                                      ; ST(0) x
    57                                      ; ST(1) y
    58                                      ; ST(2) z
    59                                  
    60 0000004C B80300                      mov ax, 3
    61                                  t_loop:
    62 0000004F D9CA                        fxch st2
    63 00000051 D9C9                        fxch st1
    64                                  
    65                                      ; y' = y*cos - x*sin
    66 00000053 D9C1                        fld     st1
    67 00000055 D80E[0E00]                  fmul dword [cos]
    68 00000059 D9C1                        fld     st1
    69 0000005B D80E[0A00]                  fmul dword [sin]
    70 0000005F DEE9                        fsub
    71                                  
    72                                      ; x' = x*cos + y*sin
    73 00000061 D9C1                        fld     st1
    74 00000063 D80E[0E00]                  fmul dword [cos]
    75 00000067 D9C3                        fld     st3
    76 00000069 D80E[0A00]                  fmul dword [sin]
    77 0000006D DEC1                        fadd
    78                                  
    79                                      ; Overwrite x with x'
    80 0000006F DDDA                        fstp    st2
    81                                      ; Overwrite y with y'
    82 00000071 DDDA                        fstp    st2
    83                                  
    84 00000073 48                          dec ax
    85 00000074 75D9                        jnz t_loop
    86                                  
    87                                      ; Scale
    88 00000076 D9E8                        fld1
    89 00000078 DDDC                        fstp st4
    90                                  
    91                                      ; expected stack
    92                                      ; ST(0) x
    93                                      ; ST(1) y
    94                                      ; ST(2) z
    95                                      ; ST(3) scale
    96                                  
    97                                      ; Appollian loop
    98 0000007A B80400                      mov ax,4
    99                                  a_loop:
   100                                      ; p -= 2.*round(0.5*p);
   101 0000007D D9EE                        fldz
   102 0000007F DDDD                        fstp st5
   103                                  
   104 00000081 BB0300                      mov bx,3
   105                                  r_loop:
   106                                      ; Rotate ST(0..2)
   107 00000084 D9CA                        fxch st2
   108 00000086 D9C9                        fxch st1
   109                                      ; Dupe
   110 00000088 D9C0                        fld     st0
   111                                      ; Divide by 2
   112 0000008A D80E[EF00]                  fmul dword [_0_5]
   113 0000008E D9FC                        frndint
   114                                      ; Multiply by 2
   115 00000090 D8C0                        fadd    st0
   116 00000092 DEE9                        fsub
   117                                  
   118 00000094 D9C0                        fld     st0
   119 00000096 D8C8                        fmul    st0
   120 00000098 DEC5                        faddp   st5, st0
   121                                  
   122 0000009A 4B                          dec bx
   123 0000009B 75E7                        jnz r_loop
   124                                  
   125                                      ; k = 1/dot(p,p)
   126 0000009D D9E8                        fld1
   127 0000009F D8C0                        fadd    st0
   128 000000A1 D8F5                        fdiv    st5
   129                                  
   130                                      ; p *= k
   131 000000A3 DCC9                        fmul    st1,st0
   132 000000A5 DCCA                        fmul    st2,st0
   133 000000A7 DCCB                        fmul    st3,st0
   134                                      ; scale *= k
   135 000000A9 DCCC                        fmul    st4,st0
   136                                  
   137                                      ; Pop k
   138 000000AB DDD8                        fstp    st0
   139                                  
   140 000000AD 48                          dec ax
   141 000000AE 75CD                        jnz a_loop
   142                                  
   143                                      ; Compute distance
   144 000000B0 D9E1                        fabs
   145 000000B2 D8F3                        fdiv    st3
   146                                  
   147                                      ; Hacky colors
   148 000000B4 D916[0600]                  fst dword [_bits]
   149 000000B8 A0[0900]                    mov al, [_bits+3]
   150 000000BB 2C10                        sub al,16
   151                                      ; Write pixel
   152 000000BD AA                          stosb
   153                                  
   154                                      ; Increment audio
   155 000000BE 01C1                        add cx, ax
   156                                  
   157                                      ; Clean up stack (if not the DosBox dynamic mode fails)
   158 000000C0 DDD8                        fstp st0
   159 000000C2 DDD8                        fstp st0
   160 000000C4 DDD8                        fstp st0
   161                                  
   162 000000C6 FF0E[0200]                  dec word [x]
   163 000000CA 0F8562FF                    jnz x_loop
   164                                  
   165 000000CE FF0E[0400]                  dec word [y]
   166 000000D2 0F8554FF                    jnz y_loop
   167                                  
   168 000000D6 89C8                        mov ax, cx
   169                                      ; This is the wrong way to send audio but it sounds weird!
   170 000000D8 E742                        out 42h, ax
   171                                  
   172 000000DA FF06[0000]                  inc word [time]
   173                                  
   174                                      ; Check for keypress to exit
   175 000000DE B401                        mov ah, 1
   176 000000E0 CD16                        int 16h
   177 000000E2 0F8428FF                    jz main_loop
   178                                  
   179                                      ; Turn off the speaker
   180 000000E6 B030                        mov al, 30h
   181 000000E8 E661                        out 61h, al
   182                                  
   183 000000EA C3                          ret
   184                                  
   185                                  ; Data section
   186 000000EB 0AD7A33B                _0_005      dd  0.005
   187 000000EF 0000003F                _0_5        dd  0.5
   188 000000F3 CDCC4C3F                _0_8        dd  0.8
   189                                  
   190                                  section .bss
   191 00000000 ????                    time        resb 2
   192 00000002 ????                    x           resb 2
   193 00000004 ????                    y           resb 2
   194                                  
   195 00000006 ????????                _bits       resb 4
   196 0000000A ????????                sin         resb 4
   197 0000000E ????????                cos         resb 4
   198                                  

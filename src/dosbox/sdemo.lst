     1                                  ; Assemble with: nasm -f bin -o sdemo.com sdemo.asm -l sdemo.lst
     2                                  
     3                                      ; 16-bit code
     4                                      BITS 16
     5                                       ; COM programs start at offset 100h
     6                                      ORG 100h
     7                                  
     8                                  start:
     9                                      ; Set video mode (320x200, 256 colors)
    10 00000000 B81300                      mov ax, 0013h
    11 00000003 CD10                        int 10h
    12                                  
    13                                      ; Set up the timer (channel 2)
    14                                      ; mov al, 10110110b    ; Channel 2, mode 3 (square wave), binary
    15                                      ; out 43h, al
    16                                  
    17                                      ; Enable speaker
    18 00000005 B033                        mov al, 33h
    19 00000007 E661                        out 61h, al
    20                                  
    21                                      ; Initialize video memory segment
    22 00000009 B800A0                      mov ax, 0A000h
    23 0000000C 8EC0                        mov es, ax
    24                                  
    25                                  main_loop:
    26                                      ; Load sin cos
    27 0000000E DF06[0000]                  fild word  [time]
    28 00000012 D80E[ED00]                  fmul dword [_0_005]
    29 00000016 D9FB                        fsincos
    30 00000018 D91E[0E00]                  fstp dword [cos]
    31 0000001C D91E[0A00]                  fstp dword [sin]
    32                                  
    33                                      ; Reset position to start of video memory
    34 00000020 31FF                        xor di, di
    35                                  
    36                                      ; Audio reset
    37 00000022 31C9                        xor cx, cx
    38                                  
    39 00000024 C706[0400]C800              mov word [y], 200
    40                                  y_loop:
    41 0000002A C706[0200]4001              mov word [x], 320
    42                                  x_loop:
    43                                      ; PUSH 0.005
    44 00000030 D906[ED00]                  fld dword [_0_005]
    45                                  
    46                                      ; Z (0.5)
    47 00000034 D906[F100]                  fld dword [_0_5]
    48                                  
    49 00000038 DF06[0400]                  fild word [y]
    50 0000003C D8CA                        fmul st2
    51 0000003E D9C1                        fld st1
    52 00000040 DEE9                        fsub
    53                                  
    54 00000042 DF06[0200]                  fild word [x]
    55 00000046 D8CB                        fmul st3
    56 00000048 D826[F500]                  fsub dword [_0_8]
    57                                  
    58                                      ; expected stack
    59                                      ; ST(0) x
    60                                      ; ST(1) y
    61                                      ; ST(2) z
    62                                      ; ST(3) 0.005
    63                                  
    64 0000004C B80300                      mov ax, 3
    65                                  t_loop:
    66 0000004F D9CA                        fxch st2
    67 00000051 D9C9                        fxch st1
    68                                  
    69                                      ; y' = y*cos - x*sin
    70 00000053 D9C1                        fld     st1
    71 00000055 D80E[0E00]                  fmul dword [cos]
    72 00000059 D9C1                        fld     st1
    73 0000005B D80E[0A00]                  fmul dword [sin]
    74 0000005F DEE9                        fsub
    75                                  
    76                                      ; x' = x*cos + y*sin
    77 00000061 D9C1                        fld     st1
    78 00000063 D80E[0E00]                  fmul dword [cos]
    79 00000067 D9C3                        fld     st3
    80 00000069 D80E[0A00]                  fmul dword [sin]
    81 0000006D DEC1                        fadd
    82                                  
    83                                      ; Overwrite x with x'
    84 0000006F DDDA                        fstp    st2
    85                                      ; Overwrite y with y'
    86 00000071 DDDA                        fstp    st2
    87                                  
    88 00000073 48                          dec ax
    89 00000074 75D9                        jnz t_loop
    90                                  
    91                                      ; Scale
    92 00000076 D9E8                        fld1
    93 00000078 DDDC                        fstp st4
    94                                  
    95                                      ; expected stack
    96                                      ; ST(0) x
    97                                      ; ST(1) y
    98                                      ; ST(2) z
    99                                      ; ST(3) scale
   100                                  
   101                                      ; Appollian loop
   102 0000007A B80400                      mov ax,4
   103                                  a_loop:
   104                                      ; p -= 2.*round(0.5*p);
   105 0000007D D9EE                        fldz
   106 0000007F DDDD                        fstp st5
   107                                  
   108 00000081 BB0300                      mov bx,3
   109                                  r_loop:
   110                                      ; Rotate ST(0..2)
   111 00000084 D9CA                        fxch st2
   112 00000086 D9C9                        fxch st1
   113                                      ; Dupe
   114 00000088 D9C0                        fld     st0
   115                                      ; Divide by 2
   116 0000008A D80E[F100]                  fmul dword [_0_5]
   117 0000008E D9FC                        frndint
   118                                      ; Multiply by 2
   119 00000090 D8C0                        fadd    st0
   120 00000092 DEE9                        fsub
   121                                  
   122 00000094 D9C0                        fld     st0
   123 00000096 D8C8                        fmul    st0
   124 00000098 DEC5                        faddp   st5, st0
   125                                  
   126 0000009A 4B                          dec bx
   127 0000009B 75E7                        jnz r_loop
   128                                  
   129                                      ; k = 1/dot(p,p)
   130 0000009D D9E8                        fld1
   131 0000009F D8C0                        fadd    st0
   132 000000A1 D8F5                        fdiv    st5
   133                                  
   134                                      ; p *= k
   135 000000A3 DCC9                        fmul    st1,st0
   136 000000A5 DCCA                        fmul    st2,st0
   137 000000A7 DCCB                        fmul    st3,st0
   138                                      ; scale *= k
   139 000000A9 DCCC                        fmul    st4,st0
   140                                  
   141                                      ; Pop k
   142 000000AB DDD8                        fstp    st0
   143                                  
   144 000000AD 48                          dec ax
   145 000000AE 75CD                        jnz a_loop
   146                                  
   147                                      ; Compute distance
   148 000000B0 D9E1                        fabs
   149 000000B2 D8F3                        fdiv    st3
   150                                  
   151                                      ; Hacky colors
   152 000000B4 D916[0600]                  fst dword [_bits]
   153 000000B8 A0[0900]                    mov al, [_bits+3]
   154 000000BB 2C10                        sub al,16
   155                                      ; Write pixel
   156 000000BD AA                          stosb
   157                                  
   158                                      ; Increment audio
   159 000000BE 01C1                        add cx, ax
   160                                  
   161                                      ; Clean up stack (if not the DosBox dynamic mode fails)
   162 000000C0 DDD8                        fstp st0
   163 000000C2 DDD8                        fstp st0
   164 000000C4 DDD8                        fstp st0
   165 000000C6 DDD8                        fstp st0
   166                                  
   167 000000C8 FF0E[0200]                  dec word [x]
   168 000000CC 0F8560FF                    jnz x_loop
   169                                  
   170 000000D0 FF0E[0400]                  dec word [y]
   171 000000D4 0F8552FF                    jnz y_loop
   172                                  
   173 000000D8 89C8                        mov ax, cx
   174                                      ; This is the wrong way to send audio but it sounds weird!
   175 000000DA E742                        out 42h, ax
   176                                  
   177 000000DC FF06[0000]                  inc word [time]
   178                                  
   179                                      ; Check for keypress to exit
   180 000000E0 B401                        mov ah, 1
   181 000000E2 CD16                        int 16h
   182 000000E4 0F8426FF                    jz main_loop
   183                                  
   184                                      ; Turn off the speaker
   185 000000E8 B030                        mov al, 30h
   186 000000EA E661                        out 61h, al
   187                                  
   188 000000EC C3                          ret
   189                                  
   190                                  ; Data section
   191 000000ED 0AD7A33B                _0_005      dd  0.005
   192 000000F1 0000003F                _0_5        dd  0.5
   193 000000F5 CDCC4C3F                _0_8        dd  0.8
   194                                  
   195                                  section .bss
   196 00000000 ????                    time        resb 2
   197 00000002 ????                    x           resb 2
   198 00000004 ????                    y           resb 2
   199                                  
   200 00000006 ????????                _bits       resb 4
   201 0000000A ????????                sin         resb 4
   202 0000000E ????????                cos         resb 4
   203                                  

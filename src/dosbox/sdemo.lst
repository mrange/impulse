     1                                  ; Assemble with: nasm -f bin -o sdemo.com sdemo.asm -l sdemo.lst
     2                                  
     3                                      ; 16-bit code
     4                                      BITS 16
     5                                       ; COM programs start at offset 100h
     6                                      ORG 100h
     7                                  
     8                                  start:
     9                                      ; Set video mode (320x200, 256 colors)
    10 00000000 B81300                      mov ax, 0013h
    11 00000003 CD10                        int 10h
    12                                  
    13                                      ; Set up the timer (channel 2)
    14                                      ; mov al, 10110110b    ; Channel 2, mode 3 (square wave), binary
    15                                      ; out 43h, al
    16                                  
    17                                      ; Enable speaker
    18 00000005 B033                        mov al, 33h
    19 00000007 E661                        out 61h, al
    20                                  
    21                                      ; Initialize video memory segment
    22 00000009 B800A0                      mov ax, 0A000h
    23 0000000C 8EC0                        mov es, ax
    24                                  
    25                                  main_loop:
    26                                      ; Load sin cos
    27 0000000E DF06[F800]                  fild word  [time]
    28 00000012 D80E[EC00]                  fmul dword [_0_005]
    29 00000016 D9FB                        fsincos
    30 00000018 D91E[0C00]                  fstp dword [cos]
    31 0000001C D91E[0800]                  fstp dword [sin]
    32                                  
    33                                      ; Reset position to start of video memory
    34 00000020 31FF                        xor di, di
    35                                  
    36 00000022 C706[0200]C800              mov word [y], 200
    37                                  y_loop:
    38 00000028 C706[0000]4001              mov word [x], 320
    39                                  x_loop:
    40                                      ; Z (0.5)
    41 0000002E D906[F000]                  fld dword [_0_5]
    42                                  
    43 00000032 DF06[0200]                  fild word [y]
    44 00000036 D80E[EC00]                  fmul dword [_0_005]
    45 0000003A D9C1                        fld st1
    46 0000003C DEE9                        fsub
    47                                  
    48 0000003E DF06[0000]                  fild word [x]
    49 00000042 D80E[EC00]                  fmul dword [_0_005]
    50 00000046 D826[F400]                  fsub dword [_0_8]
    51                                  
    52                                      ; expected stack
    53                                      ; ST(0) x
    54                                      ; ST(1) y
    55                                      ; ST(2) z
    56                                  
    57 0000004A B90300                      mov cx, 3
    58                                  t_loop:
    59 0000004D D9CA                        fxch st2
    60 0000004F D9C9                        fxch st1
    61                                  
    62                                      ; y' = y*cos - x*sin
    63 00000051 D9C1                        fld     st1
    64 00000053 D80E[0C00]                  fmul dword [cos]
    65 00000057 D9C1                        fld     st1
    66 00000059 D80E[0800]                  fmul dword [sin]
    67 0000005D DEE9                        fsub
    68                                  
    69                                      ; x' = x*cos + y*sin
    70 0000005F D9C1                        fld     st1
    71 00000061 D80E[0C00]                  fmul dword [cos]
    72 00000065 D9C3                        fld     st3
    73 00000067 D80E[0800]                  fmul dword [sin]
    74 0000006B DEC1                        fadd
    75                                  
    76                                      ; Overwrite x with x'
    77 0000006D DDDA                        fstp    st2
    78                                      ; Overwrite y with y'
    79 0000006F DDDA                        fstp    st2
    80                                  
    81 00000071 E2DA                        loop t_loop
    82                                  
    83                                      ; Scale
    84 00000073 D9E8                        fld1
    85 00000075 DDDC                        fstp st4
    86                                  
    87                                      ; expected stack
    88                                      ; ST(0) x
    89                                      ; ST(1) y
    90                                      ; ST(2) z
    91                                      ; ST(3) scale
    92                                  
    93                                      ; Appollian loop
    94 00000077 B80400                      mov ax,4
    95                                  a_loop:
    96                                      ; p -= 2.*round(0.5*p);
    97 0000007A D9EE                        fldz
    98 0000007C DDDD                        fstp st5
    99                                  
   100 0000007E B90300                      mov cx,3
   101                                  r_loop:
   102                                      ; Rotate ST(0..2)
   103 00000081 D9CA                        fxch st2
   104 00000083 D9C9                        fxch st1
   105                                      ; Dupe
   106 00000085 D9C0                        fld     st0
   107                                      ; Divide by 2
   108 00000087 D80E[F000]                  fmul dword [_0_5]
   109 0000008B D9FC                        frndint
   110                                      ; Multiply by 2
   111 0000008D D8C0                        fadd    st0
   112 0000008F DEE9                        fsub
   113                                  
   114 00000091 D9C0                        fld     st0
   115 00000093 D8C8                        fmul    st0
   116 00000095 DEC5                        faddp   st5, st0
   117                                  
   118 00000097 E2E8                        loop r_loop
   119                                  
   120                                      ; k = 2/dot(p,p)
   121 00000099 D9E8                        fld1
   122 0000009B D8C0                        fadd    st0
   123 0000009D D8F5                        fdiv    st5
   124                                  
   125                                      ; p *= k
   126 0000009F DCC9                        fmul    st1,st0
   127 000000A1 DCCA                        fmul    st2,st0
   128 000000A3 DCCB                        fmul    st3,st0
   129                                      ; scale *= k
   130 000000A5 DCCC                        fmul    st4,st0
   131                                  
   132                                      ; Pop k
   133 000000A7 DDD8                        fstp    st0
   134                                  
   135 000000A9 48                          dec ax
   136 000000AA 75CE                        jnz a_loop
   137                                  
   138                                      ; Compute distance
   139 000000AC D9E1                        fabs
   140 000000AE D8F3                        fdiv    st3
   141                                  
   142                                      ; Hacky colors
   143 000000B0 D916[0400]                  fst dword [_bits]
   144 000000B4 A0[0700]                    mov al, [_bits+3]
   145 000000B7 2C10                        sub al,16
   146                                      ; Write pixel
   147 000000B9 AA                          stosb
   148                                  
   149                                      ; Clean up stack (if not the DosBox dynamic mode fails)
   150 000000BA DDD8                        fstp st0
   151 000000BC DDD8                        fstp st0
   152 000000BE DDD8                        fstp st0
   153                                  
   154 000000C0 FF0E[0000]                  dec word [x]
   155 000000C4 0F8566FF                    jnz x_loop
   156                                  
   157 000000C8 FF0E[0200]                  dec word [y]
   158 000000CC 0F8558FF                    jnz y_loop
   159                                  
   160                                      ; Increment audio
   161 000000D0 83C349                      add bx, 73
   162                                  ;    add bx, 83
   163                                  ;    add bx, 13
   164                                  ;    add bx, 229
   165                                  ;    add bx, 1499
   166 000000D3 89D8                        mov ax, bx
   167 000000D5 E642                        out 42h, al
   168 000000D7 88C4                        mov ah, al
   169 000000D9 E642                        out 42h, al
   170                                  
   171                                  
   172 000000DB FF06[F800]                  inc word [time]
   173                                  
   174                                      ; Check for keypress to exit
   175 000000DF B401                        mov ah, 1
   176 000000E1 CD16                        int 16h
   177 000000E3 0F8427FF                    jz main_loop
   178                                  
   179                                      ; Turn off the speaker
   180 000000E7 B030                        mov al, 30h
   181 000000E9 E661                        out 61h, al
   182                                  
   183 000000EB C3                          ret
   184                                  
   185                                  ; Data section
   186 000000EC 0AD7A33B                _0_005      dd  0.005
   187 000000F0 0000003F                _0_5        dd  0.5
   188 000000F4 CDCC4C3F                _0_8        dd  0.8
   189 000000F8 0000                    time        dw  0
   190                                  
   191                                  section .bss
   192 00000000 ????                    x           resb 2
   193 00000002 ????                    y           resb 2
   194                                  
   195 00000004 ????????                _bits       resb 4
   196 00000008 ????????                sin         resb 4
   197 0000000C ????????                cos         resb 4
   198                                  

     1                                  ; Assemble with: nasm -f bin -o demo.com demo.asm
     2                                  
     3                                      ; 16-bit code
     4                                      BITS 16
     5                                       ; COM programs start at offset 100h
     6                                      ORG 100h
     7                                  
     8                                  start:
     9                                      ; Set video mode (320x200, 256 colors)
    10 00000000 B81300                      mov ax, 0013h
    11 00000003 CD10                        int 10h
    12                                  
    13                                      ; Initialize video memory segment
    14 00000005 B800A0                      mov ax, 0A000h
    15 00000008 8EC0                        mov es, ax
    16                                  
    17                                  main_loop:
    18                                      ; Load sin cos
    19 0000000A DF06[1C00]                  fild word  [time]
    20 0000000E D80E[0000]                  fmul dword [_0_005]
    21 00000012 D9FB                        fsincos
    22 00000014 D91E[1400]                  fstp dword [cos]
    23 00000018 D91E[1000]                  fstp dword [sin]
    24                                  
    25                                      ; Reset position to start of video memory
    26 0000001C 31FF                        xor di, di
    27                                  
    28 0000001E C706[1A00]C800              mov word [y], 200
    29                                  y_loop:
    30 00000024 C706[1800]4001              mov word [x], 320
    31                                  x_loop:
    32                                      ; PUSH 0.005
    33 0000002A D906[0000]                  fld dword [_0_005]
    34 0000002E D906[1000]                  fld dword [sin]
    35 00000032 D906[1400]                  fld dword [cos]
    36                                  
    37                                      ; Z (0.5)
    38 00000036 D906[0400]                  fld dword [_0_5]
    39                                  
    40 0000003A DF06[1A00]                  fild word [y]
    41 0000003E D8CC                        fmul st4
    42 00000040 D9C1                        fld st1
    43 00000042 DEE9                        fsub
    44                                  
    45 00000044 DF06[1800]                  fild word [x]
    46 00000048 D8CD                        fmul st5
    47 0000004A D906[0800]                  fld dword [_0_8]
    48 0000004E DEE9                        fsub
    49                                  
    50                                      ; expected stack
    51                                      ; ST(0) x
    52                                      ; ST(1) y
    53                                      ; ST(2) z
    54                                      ; ST(3) cos
    55                                      ; ST(4) sin
    56                                  
    57 00000050 B80300                      mov ax, 3
    58                                  t_loop:
    59 00000053 D9CA                        fxch st2
    60 00000055 D9C9                        fxch st1
    61                                  
    62                                      ; y' = y*cos - x*sin
    63 00000057 D9C1                        fld     st1
    64 00000059 D8CC                        fmul    st4
    65 0000005B D9C1                        fld     st1
    66 0000005D D8CE                        fmul    st6
    67 0000005F DEE9                        fsub
    68                                  
    69                                      ; x' = x*cos + y*sin
    70 00000061 D9C1                        fld     st1
    71 00000063 D8CD                        fmul    st5
    72 00000065 D9C3                        fld     st3
    73 00000067 D8CF                        fmul    st7
    74 00000069 DEC1                        fadd
    75                                  
    76                                      ; Overwrite x with x'
    77 0000006B DDDA                        fstp    st2
    78                                      ; Overwrite y with y'
    79 0000006D DDDA                        fstp    st2
    80                                  
    81 0000006F 48                          dec ax
    82 00000070 75E1                        jnz t_loop
    83                                  
    84                                      ; Scale
    85 00000072 D9E8                        fld1
    86 00000074 DDDC                        fstp st4
    87                                  
    88                                      ; expected stack
    89                                      ; ST(0) x
    90                                      ; ST(1) y
    91                                      ; ST(2) z
    92                                      ; ST(3) scale
    93                                  
    94                                  
    95                                      ; Appollian loop
    96 00000076 B80400                      mov ax,4
    97                                  a_loop:
    98                                      ; p -= 2.*round(0.5*p);
    99                                  
   100 00000079 BB0300                      mov bx,3
   101                                  r_loop:
   102                                      ; Rotate ST(0..2)
   103 0000007C D9CA                        fxch st2
   104 0000007E D9C9                        fxch st1
   105                                      ; Dupe
   106 00000080 D9C0                        fld     st0
   107                                      ; Divide by 2
   108 00000082 D80E[0400]                  fmul dword [_0_5]
   109 00000086 D9FC                        frndint
   110                                      ; Multiply by 2
   111 00000088 D8C0                        fadd    st0
   112 0000008A DEE9                        fsub
   113 0000008C 4B                          dec bx
   114 0000008D 75ED                        jnz r_loop
   115                                  
   116                                      ; dot(p,p)
   117                                      ; Dupe x
   118 0000008F D9C0                        fld     st0
   119 00000091 D8C8                        fmul    st0
   120                                  
   121                                      ; Dupe y
   122 00000093 D9C2                        fld     st2
   123 00000095 D8C8                        fmul    st0
   124                                  
   125 00000097 DEC1                        fadd
   126                                  
   127                                      ; Dupe z
   128 00000099 D9C3                        fld     st3
   129 0000009B D8C8                        fmul    st0
   130                                  
   131 0000009D DEC1                        fadd
   132                                  
   133                                      ; k = 1/dot(p,p)
   134 0000009F D9E8                        fld1
   135 000000A1 D8C0                        fadd    st0
   136 000000A3 DEF1                        fdivr
   137                                  
   138                                      ; p *= k
   139 000000A5 DCC9                        fmul    st1,st0
   140 000000A7 DCCA                        fmul    st2,st0
   141 000000A9 DCCB                        fmul    st3,st0
   142                                      ; scale *= k
   143 000000AB DCCC                        fmul    st4,st0
   144                                  
   145                                      ; Pop k
   146 000000AD DDD8                        fstp    st0
   147                                  
   148 000000AF 48                          dec ax
   149 000000B0 75C7                        jnz a_loop
   150                                  
   151                                      ; Compute distance
   152 000000B2 D9E1                        fabs
   153 000000B4 D8F3                        fdiv    st3
   154                                  
   155                                      ; Hacky colors
   156 000000B6 D916[0C00]                  fst dword [_bits]
   157 000000BA A0[0F00]                    mov al, [_bits+3]
   158 000000BD 2C10                        sub al,16
   159                                  
   160                                      ; Write pixel
   161 000000BF AA                          stosb
   162                                  
   163 000000C0 FF0E[1800]                  dec word [x]
   164 000000C4 0F8562FF                    jnz x_loop
   165                                  
   166 000000C8 FF0E[1A00]                  dec word [y]
   167 000000CC 0F8554FF                    jnz y_loop
   168                                  
   169 000000D0 FF06[1C00]                  inc word [time]
   170                                  
   171                                      ; Check for keypress to exit
   172 000000D4 B401                        mov ah, 1
   173 000000D6 CD16                        int 16h
   174 000000D8 0F842EFF                    jz main_loop
   175                                  
   176 000000DC C3                          ret
   177                                  
   178                                  ; Data section
   179                                  section .data
   180 00000000 0AD7A33B                _0_005      dd  0.005
   181 00000004 0000003F                _0_5        dd  0.5
   182 00000008 CDCC4C3F                _0_8        dd  0.8
   183 0000000C 00000000                _bits       dd  0.0
   184 00000010 00000000                sin         dd  0.0
   185 00000014 00000000                cos         dd  0.0
   186                                  
   187 00000018 0000                    x           dw  0
   188 0000001A 0000                    y           dw  0
   189 0000001C 0000                    time        dw  0
   190                                  

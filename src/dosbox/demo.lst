     1                                  ; Assemble with: nasm -f bin -o demo.com demo.asm -l demo.lst
     2                                  
     3                                      ; 16-bit code
     4                                      BITS 16
     5                                       ; COM programs start at offset 100h
     6                                      ORG 100h
     7                                  
     8                                  start:
     9                                      ; Set video mode (320x200, 256 colors)
    10 00000000 B81300                      mov ax, 0013h
    11 00000003 CD10                        int 10h
    12                                  
    13                                      ; Initialize video memory segment
    14 00000005 B800A0                      mov ax, 0A000h
    15 00000008 8EC0                        mov es, ax
    16                                  
    17                                  main_loop:
    18                                      ; Load sin cos
    19 0000000A DF06[EE00]                  fild word  [time]
    20 0000000E D80E[E200]                  fmul dword [_0_005]
    21 00000012 D9FB                        fsincos
    22 00000014 D91E[0C00]                  fstp dword [cos]
    23 00000018 D91E[0800]                  fstp dword [sin]
    24                                  
    25                                      ; Reset position to start of video memory
    26 0000001C 31FF                        xor di, di
    27                                  
    28 0000001E C706[0200]C800              mov word [y], 200
    29                                  y_loop:
    30 00000024 C706[0000]4001              mov word [x], 320
    31                                  x_loop:
    32                                      ; PUSH 0.005
    33 0000002A D906[E200]                  fld dword [_0_005]
    34                                  
    35                                      ; Z (0.5)
    36 0000002E D906[E600]                  fld dword [_0_5]
    37                                  
    38 00000032 DF06[0200]                  fild word [y]
    39 00000036 D8CA                        fmul st2
    40 00000038 D9C1                        fld st1
    41 0000003A DEE9                        fsub
    42                                  
    43 0000003C DF06[0000]                  fild word [x]
    44 00000040 D8CB                        fmul st3
    45 00000042 D826[EA00]                  fsub dword [_0_8]
    46                                  
    47                                      ; expected stack
    48                                      ; ST(0) x
    49                                      ; ST(1) y
    50                                      ; ST(2) z
    51                                      ; ST(3) 0.005
    52                                  
    53 00000046 B80300                      mov ax, 3
    54                                  t_loop:
    55 00000049 D9CA                        fxch st2
    56 0000004B D9C9                        fxch st1
    57                                  
    58                                      ; y' = y*cos - x*sin
    59 0000004D D9C1                        fld     st1
    60 0000004F D80E[0C00]                  fmul dword [cos]
    61 00000053 D9C1                        fld     st1
    62 00000055 D80E[0800]                  fmul dword [sin]
    63 00000059 DEE9                        fsub
    64                                  
    65                                      ; x' = x*cos + y*sin
    66 0000005B D9C1                        fld     st1
    67 0000005D D80E[0C00]                  fmul dword [cos]
    68 00000061 D9C3                        fld     st3
    69 00000063 D80E[0800]                  fmul dword [sin]
    70 00000067 DEC1                        fadd
    71                                  
    72                                      ; Overwrite x with x'
    73 00000069 DDDA                        fstp    st2
    74                                      ; Overwrite y with y'
    75 0000006B DDDA                        fstp    st2
    76                                  
    77 0000006D 48                          dec ax
    78 0000006E 75D9                        jnz t_loop
    79                                  
    80                                      ; Scale
    81 00000070 D9E8                        fld1
    82 00000072 DDDC                        fstp st4
    83                                  
    84                                      ; expected stack
    85                                      ; ST(0) x
    86                                      ; ST(1) y
    87                                      ; ST(2) z
    88                                      ; ST(3) scale
    89                                  
    90                                      ; Appollian loop
    91 00000074 B80400                      mov ax,4
    92                                  a_loop:
    93                                      ; p -= 2.*round(0.5*p);
    94 00000077 D9EE                        fldz
    95 00000079 DDDD                        fstp st5
    96                                  
    97 0000007B BB0300                      mov bx,3
    98                                  r_loop:
    99                                      ; Rotate ST(0..2)
   100 0000007E D9CA                        fxch st2
   101 00000080 D9C9                        fxch st1
   102                                      ; Dupe
   103 00000082 D9C0                        fld     st0
   104                                      ; Divide by 2
   105 00000084 D80E[E600]                  fmul dword [_0_5]
   106 00000088 D9FC                        frndint
   107                                      ; Multiply by 2
   108 0000008A D8C0                        fadd    st0
   109 0000008C DEE9                        fsub
   110                                  
   111 0000008E D9C0                        fld     st0
   112 00000090 D8C8                        fmul    st0
   113 00000092 DEC5                        faddp   st5, st0
   114                                  
   115 00000094 4B                          dec bx
   116 00000095 75E7                        jnz r_loop
   117                                  
   118                                      ; k = 1/dot(p,p)
   119 00000097 D9E8                        fld1
   120 00000099 D8C0                        fadd    st0
   121 0000009B D8F5                        fdiv    st5
   122                                  
   123                                      ; p *= k
   124 0000009D DCC9                        fmul    st1,st0
   125 0000009F DCCA                        fmul    st2,st0
   126 000000A1 DCCB                        fmul    st3,st0
   127                                      ; scale *= k
   128 000000A3 DCCC                        fmul    st4,st0
   129                                  
   130                                      ; Pop k
   131 000000A5 DDD8                        fstp    st0
   132                                  
   133 000000A7 48                          dec ax
   134 000000A8 75CD                        jnz a_loop
   135                                  
   136                                      ; Compute distance
   137 000000AA D9E1                        fabs
   138 000000AC D8F3                        fdiv    st3
   139                                  
   140                                      ; Hacky colors
   141 000000AE D916[0400]                  fst dword [_bits]
   142 000000B2 A0[0700]                    mov al, [_bits+3]
   143 000000B5 2C10                        sub al,16
   144                                  
   145                                      ; Write pixel
   146 000000B7 AA                          stosb
   147                                  
   148                                      ; Clean up stack (if not the DosBox dynamic mode fails)
   149 000000B8 DDD8                        fstp st0
   150 000000BA DDD8                        fstp st0
   151 000000BC DDD8                        fstp st0
   152 000000BE DDD8                        fstp st0
   153                                  
   154 000000C0 FF0E[0000]                  dec word [x]
   155 000000C4 0F8562FF                    jnz x_loop
   156                                  
   157 000000C8 FF0E[0200]                  dec word [y]
   158 000000CC 0F8554FF                    jnz y_loop
   159                                  
   160 000000D0 FF06[EE00]                  inc word [time]
   161                                  
   162                                      ; Check for keypress to exit
   163 000000D4 B401                        mov ah, 1
   164 000000D6 CD16                        int 16h
   165 000000D8 0F842EFF                    jz main_loop
   166                                  
   167                                      ; Restore text mode
   168 000000DC B80300                      mov ax, 0x0003
   169 000000DF CD10                        int 0x10
   170                                  
   171 000000E1 C3                          ret
   172                                  
   173                                  ; Data section
   174 000000E2 0AD7A33B                _0_005      dd  0.005
   175 000000E6 0000003F                _0_5        dd  0.5
   176 000000EA CDCC4C3F                _0_8        dd  0.8
   177                                  
   178 000000EE 0000                    time        dw  0
   179                                  
   180                                  section .bss
   181 00000000 ????                    x           resb 2
   182 00000002 ????                    y           resb 2
   183                                  
   184 00000004 ????????                _bits       resb 4
   185 00000008 ????????                sin         resb 4
   186 0000000C ????????                cos         resb 4
   187                                  

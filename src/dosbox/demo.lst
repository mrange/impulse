     1                                  ; Assemble with: nasm -f bin -o demo.com demo.asm
     2                                  
     3                                      ; 16-bit code
     4                                      BITS 16
     5                                       ; COM programs start at offset 100h
     6                                      ORG 100h
     7                                  
     8                                  start:
     9 00000000 9BDBE3                      finit
    10                                  
    11                                      ; Set video mode (320x200, 256 colors)
    12 00000003 B81300                      mov ax, 0013h
    13 00000006 CD10                        int 10h
    14                                  
    15                                      ; Initialize video memory segment
    16 00000008 B800A0                      mov ax, 0A000h
    17 0000000B 8EC0                        mov es, ax
    18                                  
    19                                  main_loop:
    20                                      ; Load sin cos
    21 0000000D DF06[1C00]                  fild word  [time]
    22 00000011 D80E[0000]                  fmul dword [_0_005]
    23 00000015 D9FB                        fsincos
    24 00000017 D91E[1400]                  fstp dword [cos]
    25 0000001B D91E[1000]                  fstp dword [sin]
    26                                  
    27                                      ; Reset position to start of video memory
    28 0000001F 31FF                        xor di, di
    29                                  
    30 00000021 C706[1A00]C800              mov word [y], 200
    31                                  y_loop:
    32 00000027 C706[1800]4001              mov word [x], 320
    33                                  x_loop:
    34                                      ; PUSH 0.005
    35 0000002D D906[0000]                  fld dword [_0_005]
    36 00000031 D906[1000]                  fld dword [sin]
    37 00000035 D906[1400]                  fld dword [cos]
    38                                  
    39                                      ; Z (0.5)
    40 00000039 D906[0400]                  fld dword [_0_5]
    41                                  
    42 0000003D DF06[1A00]                  fild word [y]
    43 00000041 D8CC                        fmul st4
    44 00000043 D9C1                        fld st1
    45 00000045 DEE9                        fsub
    46                                  
    47 00000047 DF06[1800]                  fild word [x]
    48 0000004B D8CD                        fmul st5
    49 0000004D D906[0800]                  fld dword [_0_8]
    50 00000051 DEE9                        fsub
    51                                  
    52                                      ; expected stack
    53                                      ; ST(0) x
    54                                      ; ST(1) y
    55                                      ; ST(2) z
    56                                      ; ST(3) cos
    57                                      ; ST(4) sin
    58                                  
    59 00000053 B80300                      mov ax, 3
    60                                  t_loop:
    61 00000056 D9CA                        fxch st2
    62 00000058 D9C9                        fxch st1
    63                                  
    64                                      ; y' = y*cos - x*sin
    65 0000005A D9C1                        fld     st1
    66 0000005C D8CC                        fmul    st4
    67 0000005E D9C1                        fld     st1
    68 00000060 D8CE                        fmul    st6
    69 00000062 DEE9                        fsub
    70                                  
    71                                      ; x' = x*cos + y*sin
    72 00000064 D9C1                        fld     st1
    73 00000066 D8CD                        fmul    st5
    74 00000068 D9C3                        fld     st3
    75 0000006A D8CF                        fmul    st7
    76 0000006C DEC1                        fadd
    77                                  
    78                                      ; Overwrite x with x'
    79 0000006E DDDA                        fstp    st2
    80                                      ; Overwrite y with y'
    81 00000070 DDDA                        fstp    st2
    82                                  
    83 00000072 48                          dec ax
    84 00000073 75E1                        jnz t_loop
    85                                  
    86                                      ; Scale
    87 00000075 D9E8                        fld1
    88 00000077 DDDC                        fstp st4
    89                                  
    90                                      ; expected stack
    91                                      ; ST(0) x
    92                                      ; ST(1) y
    93                                      ; ST(2) z
    94                                      ; ST(3) scale
    95                                  
    96                                  
    97                                      ; Appollian loop
    98 00000079 B80400                      mov ax,4
    99                                  a_loop:
   100                                      ; p -= 2.*round(0.5*p);
   101                                  
   102 0000007C BB0300                      mov bx,3
   103                                  r_loop:
   104                                      ; Rotate ST(0..2)
   105 0000007F D9CA                        fxch st2
   106 00000081 D9C9                        fxch st1
   107                                      ; Dupe
   108 00000083 D9C0                        fld     st0
   109                                      ; Divide by 2
   110 00000085 D80E[0400]                  fmul dword [_0_5]
   111 00000089 D9FC                        frndint
   112                                      ; Multiply by 2
   113 0000008B D8C0                        fadd    st0
   114 0000008D DEE9                        fsub
   115 0000008F 4B                          dec bx
   116 00000090 75ED                        jnz r_loop
   117                                  
   118                                      ; dot(p,p)
   119                                      ; Dupe x
   120 00000092 D9C0                        fld     st0
   121 00000094 D8C8                        fmul    st0
   122                                  
   123                                      ; Dupe y
   124 00000096 D9C2                        fld     st2
   125 00000098 D8C8                        fmul    st0
   126                                  
   127 0000009A DEC1                        fadd
   128                                  
   129                                      ; Dupe z
   130 0000009C D9C3                        fld     st3
   131 0000009E D8C8                        fmul    st0
   132                                  
   133 000000A0 DEC1                        fadd
   134                                  
   135                                      ; k = 1/dot(p,p)
   136 000000A2 D9E8                        fld1
   137 000000A4 D8C0                        fadd    st0
   138 000000A6 DEF1                        fdivr
   139                                  
   140                                      ; p *= k
   141 000000A8 DCC9                        fmul    st1,st0
   142 000000AA DCCA                        fmul    st2,st0
   143 000000AC DCCB                        fmul    st3,st0
   144                                      ; scale *= k
   145 000000AE DCCC                        fmul    st4,st0
   146                                  
   147                                      ; Pop k
   148 000000B0 DDD8                        fstp    st0
   149                                  
   150 000000B2 48                          dec ax
   151 000000B3 75C7                        jnz a_loop
   152                                  
   153                                      ; Compute distance
   154 000000B5 D9E1                        fabs
   155 000000B7 D8F3                        fdiv    st3
   156                                  
   157                                      ; Hacky colors
   158 000000B9 D916[0C00]                  fst dword [_bits]
   159 000000BD A0[0F00]                    mov al, [_bits+3]
   160 000000C0 2C10                        sub al,16
   161                                  
   162                                      ; Write pixel
   163 000000C2 AA                          stosb
   164                                  
   165 000000C3 FF0E[1800]                  dec word [x]
   166 000000C7 0F8562FF                    jnz x_loop
   167                                  
   168 000000CB FF0E[1A00]                  dec word [y]
   169 000000CF 0F8554FF                    jnz y_loop
   170                                  
   171 000000D3 FF06[1C00]                  inc word [time]
   172                                  
   173                                      ; Check for keypress to exit
   174 000000D7 B401                        mov ah, 1
   175 000000D9 CD16                        int 16h
   176 000000DB 0F842EFF                    jz main_loop
   177                                  
   178 000000DF C3                          ret
   179                                  
   180                                  ; Data section
   181                                  section .data
   182 00000000 0AD7A33B                _0_005      dd  0.005
   183 00000004 0000003F                _0_5        dd  0.5
   184 00000008 CDCC4C3F                _0_8        dd  0.8
   185 0000000C 00000000                _bits       dd  0.0
   186 00000010 00000000                sin         dd  0.0
   187 00000014 00000000                cos         dd  0.0
   188                                  
   189 00000018 0000                    x           dw  0
   190 0000001A 0000                    y           dw  0
   191 0000001C 0000                    time        dw  0
   192                                  

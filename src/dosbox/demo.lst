     1                                  ; DOS demo with FPU sine wave pattern
     2                                  ; Assemble with: nasm -f bin -o demo.com demo.asm
     3                                  
     4                                      ; 16-bit code
     5                                      BITS 16
     6                                       ; COM programs start at offset 100h
     7                                      ORG 100h
     8                                  
     9                                  start:
    10                                      ; Set video mode (320x200, 256 colors)
    11 00000000 B81300                      mov ax, 0013h
    12 00000003 CD10                        int 10h
    13                                  
    14                                      ; Initialize video memory segment
    15 00000005 B800A0                      mov ax, 0A000h
    16 00000008 8EC0                        mov es, ax
    17                                  
    18                                      ; PUSH 2
    19 0000000A D9E8                        fld1
    20 0000000C D9E8                        fld1
    21 0000000E DEC1                        fadd
    22                                  
    23                                  main_loop:
    24                                      ; Reset position to start of video memory
    25 00000010 31FF                        xor di, di
    26                                  
    27 00000012 C706[BB00]C800              mov word [y], 200
    28                                  y_loop:
    29 00000018 C706[B900]4001              mov word [x], 320
    30                                  x_loop:
    31                                      ; expected stack
    32                                      ; ST(0) 2
    33                                  
    34                                      ; Scale
    35 0000001E D9E8                        fld1
    36                                  
    37                                      ; Z
    38 00000020 D9E8                        fld1
    39                                  
    40 00000022 DF06[BB00]                  fild word [y]
    41 00000026 DF06[B700]                  fild word [_100]
    42 0000002A DEF9                        fdiv
    43 0000002C D9E8                        fld1
    44 0000002E DEE9                        fsub
    45                                  
    46 00000030 DF06[B900]                  fild word [x]
    47 00000034 DF06[B700]                  fild word [_100]
    48 00000038 DEF9                        fdiv
    49 0000003A D906[B300]                  fld dword [_1_6]
    50 0000003E DEE9                        fsub
    51                                  
    52                                      ; expected stack
    53                                      ; ST(0) x
    54                                      ; ST(1) y
    55                                      ; ST(2) z
    56                                      ; ST(3) scale
    57                                      ; ST(4) 2
    58                                  
    59                                      ; Appollian loop
    60 00000040 B005                        mov al,5
    61                                  a_loop:
    62                                      ; p -= 2.*round(0.5*p);
    63                                  
    64 00000042 B403                        mov ah,3
    65                                  r_loop:
    66                                      ; Rotate ST(0..2)
    67 00000044 D9CA                        fxch st2
    68 00000046 D9C9                        fxch st1
    69                                      ; Dupe
    70 00000048 D9C0                        fld     st0
    71                                      ; Divide by 2
    72 0000004A D8F5                        fdiv    st5
    73 0000004C D9FC                        frndint
    74                                      ; Multiply by 2
    75 0000004E D8CD                        fmul    st5
    76 00000050 DEE9                        fsub
    77 00000052 FECC                        dec ah
    78 00000054 75EE                        jnz r_loop
    79                                  
    80                                      ; dot(p,p)
    81                                      ; Dupe x
    82 00000056 D9C0                        fld     st0
    83 00000058 D8C8                        fmul    st0
    84                                  
    85                                      ; Dupe y
    86 0000005A D9C2                        fld     st2
    87 0000005C D8C8                        fmul    st0
    88                                  
    89                                      ; Dupe z
    90 0000005E D9C3                        fld     st3
    91 00000060 D8C8                        fmul    st0
    92                                  
    93 00000062 DEC1                        fadd
    94 00000064 DEC1                        fadd
    95                                  
    96                                      ; k = 1/dot(p,p)
    97 00000066 D9E8                        fld1
    98 00000068 DEF1                        fdivr
    99                                  
   100                                      ; p *= k
   101 0000006A DCC9                        fmul    st1,st0
   102 0000006C DCCA                        fmul    st2,st0
   103 0000006E DCCB                        fmul    st3,st0
   104                                      ; scale *= k
   105 00000070 DCCC                        fmul    st4,st0
   106                                  
   107                                      ; Pop k
   108 00000072 DDD8                        fstp    st0
   109                                  
   110 00000074 FEC8                        dec al
   111 00000076 75CA                        jnz a_loop
   112                                  
   113                                      ; Compute distance
   114 00000078 D9E1                        fabs
   115 0000007A D8F3                        fdiv    st3
   116                                  
   117                                  
   118 0000007C D906[AF00]                  fld dword [threshold]
   119                                  
   120 00000080 DFF1                        fcomip
   121 00000082 7602                        jbe set_color
   122 00000084 B032                        mov al, 0x32
   123                                  set_color:
   124                                      ; Write pixel and advance DI
   125 00000086 AA                          stosb
   126                                  
   127                                      ; Restore stack to expected state
   128                                      ; ST(0) 2
   129 00000087 DDD8                        fstp    st0
   130 00000089 DDD8                        fstp    st0
   131 0000008B DDD8                        fstp    st0
   132 0000008D DDD8                        fstp    st0
   133                                  
   134 0000008F FF0E[B900]                  dec word [x]
   135 00000093 7589                        jnz x_loop
   136                                  
   137 00000095 FF0E[BB00]                  dec word [y]
   138 00000099 0F857BFF                    jnz y_loop
   139                                  
   140                                      ; Check for keypress to exit
   141 0000009D B401                        mov ah, 1
   142 0000009F CD16                        int 16h
   143 000000A1 0F846BFF                    jz main_loop
   144                                  
   145                                      ; Clear keyboard buffer
   146 000000A5 B400                        mov ah, 0
   147 000000A7 CD16                        int 16h
   148                                  
   149                                      ; Clear keyboard buffer
   150 000000A9 B80300                      mov ax, 0003h
   151 000000AC CD10                        int 10h
   152 000000AE C3                          ret
   153                                  
   154                                  ; Data section
   155 000000AF 0AD7233C                threshold   dd  0.01
   156 000000B3 CDCCCC3F                _1_6        dd  1.6
   157                                  
   158 000000B7 6400                    _100        dw  100
   159 000000B9 0000                    x           dw  0
   160 000000BB 0000                    y           dw  0

     1                                  ; Assemble with: nasm -f bin -o demo.com demo.asm
     2                                  
     3                                      ; 16-bit code
     4                                      BITS 16
     5                                       ; COM programs start at offset 100h
     6                                      ORG 100h
     7                                  
     8                                  start:
     9 00000000 9BDBE3                      finit
    10                                  
    11                                      ; Set video mode (320x200, 256 colors)
    12 00000003 B81300                      mov ax, 0013h
    13 00000006 CD10                        int 10h
    14                                  
    15                                      ; Initialize video memory segment
    16 00000008 B800A0                      mov ax, 0A000h
    17 0000000B 8EC0                        mov es, ax
    18                                  
    19 0000000D EB00                        jmp main_loop
    20                                  
    21                                  main_loop:
    22                                      ; Load sin cos
    23 0000000F DF06[FC00]                  fild word  [time]
    24 00000013 D80E[E400]                  fmul dword [_0_005]
    25 00000017 D9FB                        fsincos
    26 00000019 D91E[F400]                  fstp dword [cos]
    27 0000001D D91E[F000]                  fstp dword [sin]
    28                                  
    29                                      ; Reset position to start of video memory
    30 00000021 BF3C00                      mov di, 60
    31                                  
    32 00000024 C706[FA00]C800              mov word [y], 200
    33                                  y_loop:
    34 0000002A C706[F800]C800              mov word [x], 200
    35                                  x_loop:
    36                                      ; PUSH 0.01
    37 00000030 D906[E400]                  fld dword [_0_005]
    38 00000034 D906[F000]                  fld dword [sin]
    39 00000038 D906[F400]                  fld dword [cos]
    40                                  
    41                                      ; Z (0.01)
    42 0000003C D906[E800]                  fld dword [_0_5]
    43                                  
    44 00000040 DF06[FA00]                  fild word [y]
    45 00000044 D8CC                        fmul st4
    46 00000046 D9C1                        fld st1
    47 00000048 DEE9                        fsub
    48                                  
    49 0000004A DF06[F800]                  fild word [x]
    50 0000004E D8CD                        fmul st5
    51 00000050 D9C2                        fld st2
    52 00000052 DEE9                        fsub
    53                                  
    54                                      ; expected stack
    55                                      ; ST(0) x
    56                                      ; ST(1) y
    57                                      ; ST(2) z
    58                                      ; ST(3) cos
    59                                      ; ST(4) sin
    60                                  
    61 00000054 B80300                      mov ax, 3
    62                                  t_loop:
    63 00000057 D9CA                        fxch st2
    64 00000059 D9C9                        fxch st1
    65                                  
    66                                      ; y' = y*cos - x*sin
    67 0000005B D9C1                        fld     st1
    68 0000005D D8CC                        fmul    st4
    69 0000005F D9C1                        fld     st1
    70 00000061 D8CE                        fmul    st6
    71 00000063 DEE9                        fsub
    72                                  
    73                                      ; x' = x*cos + y*sin
    74 00000065 D9C1                        fld     st1
    75 00000067 D8CD                        fmul    st5
    76 00000069 D9C3                        fld     st3
    77 0000006B D8CF                        fmul    st7
    78 0000006D DEC1                        fadd
    79                                  
    80                                      ; Overwrite x with x'
    81 0000006F DDDA                        fstp    st2
    82                                      ; Overwrite y with y'
    83 00000071 DDDA                        fstp    st2
    84                                  
    85 00000073 48                          dec ax
    86 00000074 75E1                        jnz t_loop
    87                                  
    88                                      ; Scale
    89 00000076 D9E8                        fld1
    90 00000078 DDDC                        fstp st4
    91                                  
    92                                      ; expected stack
    93                                      ; ST(0) x
    94                                      ; ST(1) y
    95                                      ; ST(2) z
    96                                      ; ST(3) scale
    97                                  
    98                                  
    99                                      ; Appollian loop
   100 0000007A B80400                      mov ax,4
   101                                  a_loop:
   102                                      ; p -= 2.*round(0.5*p);
   103                                  
   104 0000007D BB0300                      mov bx,3
   105                                  r_loop:
   106                                      ; Rotate ST(0..2)
   107 00000080 D9CA                        fxch st2
   108 00000082 D9C9                        fxch st1
   109                                      ; Dupe
   110 00000084 D9C0                        fld     st0
   111                                      ; Divide by 2
   112 00000086 D80E[E800]                  fmul dword [_0_5]
   113 0000008A D9FC                        frndint
   114                                      ; Multiply by 2
   115 0000008C D8C0                        fadd    st0
   116 0000008E DEE9                        fsub
   117 00000090 4B                          dec bx
   118 00000091 75ED                        jnz r_loop
   119                                  
   120                                      ; dot(p,p)
   121                                      ; Dupe x
   122 00000093 D9C0                        fld     st0
   123 00000095 D8C8                        fmul    st0
   124                                  
   125                                      ; Dupe y
   126 00000097 D9C2                        fld     st2
   127 00000099 D8C8                        fmul    st0
   128                                  
   129 0000009B DEC1                        fadd
   130                                  
   131                                      ; Dupe z
   132 0000009D D9C3                        fld     st3
   133 0000009F D8C8                        fmul    st0
   134                                  
   135 000000A1 DEC1                        fadd
   136                                  
   137                                      ; k = 1/dot(p,p)
   138 000000A3 D9E8                        fld1
   139 000000A5 D8C0                        fadd    st0
   140 000000A7 DEF1                        fdivr
   141                                  
   142                                      ; p *= k
   143 000000A9 DCC9                        fmul    st1,st0
   144 000000AB DCCA                        fmul    st2,st0
   145 000000AD DCCB                        fmul    st3,st0
   146                                      ; scale *= k
   147 000000AF DCCC                        fmul    st4,st0
   148                                  
   149                                      ; Pop k
   150 000000B1 DDD8                        fstp    st0
   151                                  
   152 000000B3 48                          dec ax
   153 000000B4 75C7                        jnz a_loop
   154                                  
   155                                      ; Compute distance
   156 000000B6 D9E1                        fabs
   157 000000B8 D8F3                        fdiv    st3
   158                                  
   159 000000BA D916[EC00]                  fst dword [_bits]
   160 000000BE A0[EF00]                    mov al, [_bits+3]
   161 000000C1 2C10                        sub al,16
   162                                  
   163 000000C3 AA                          stosb
   164                                  
   165                                      ; Restore stack to expected state
   166                                      ;   Not needed as nothing is kept stack
   167                                      ; fstp    st0
   168                                      ; fstp    st0
   169                                      ; fstp    st0
   170                                      ; fstp    st0
   171                                  
   172 000000C4 FF0E[F800]                  dec word [x]
   173 000000C8 0F8564FF                    jnz x_loop
   174                                  
   175 000000CC 83C778                      add di,120
   176                                  
   177 000000CF FF0E[FA00]                  dec word [y]
   178 000000D3 0F8553FF                    jnz y_loop
   179                                  
   180 000000D7 FF06[FC00]                  inc word [time]
   181                                  
   182                                      ; Check for keypress to exit
   183 000000DB B401                        mov ah, 1
   184 000000DD CD16                        int 16h
   185 000000DF 0F842CFF                    jz main_loop
   186                                  
   187 000000E3 C3                          ret
   188                                  
   189                                  ; Data section
   190 000000E4 0AD7A33B                _0_005      dd  0.005
   191 000000E8 0000003F                _0_5        dd  0.5
   192 000000EC 00000000                _bits       dd  0.0
   193 000000F0 00000000                sin         dd  0.0
   194 000000F4 00000000                cos         dd  0.0
   195                                  
   196 000000F8 0000                    x           dw  0
   197 000000FA 0000                    y           dw  0
   198 000000FC 0000                    time        dw  0
   199                                  

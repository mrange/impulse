     1                                  ; Assemble with: nasm -f bin -o demo.com demo.asm -l demo.lst
     2                                  
     3                                      ; 16-bit code
     4                                      BITS 16
     5                                       ; COM programs start at offset 100h
     6                                      ORG 100h
     7                                  
     8                                  start:
     9                                      ; Set video mode (320x200, 256 colors)
    10 00000000 B81300                      mov ax, 0013h
    11 00000003 CD10                        int 10h
    12                                  
    13                                      ; Initialize video memory segment
    14 00000005 B800A0                      mov ax, 0A000h
    15 00000008 8EC0                        mov es, ax
    16                                  
    17                                  main_loop:
    18                                      ; Load sin cos
    19 0000000A DF06[EC00]                  fild word  [time]
    20 0000000E D80E[E000]                  fmul dword [_0_005]
    21 00000012 D9FB                        fsincos
    22 00000014 D91E[0C00]                  fstp dword [cos]
    23 00000018 D91E[0800]                  fstp dword [sin]
    24                                  
    25                                      ; Reset position to start of video memory
    26 0000001C 31FF                        xor di, di
    27                                  
    28 0000001E C706[0200]C800              mov word [y], 200
    29                                  y_loop:
    30 00000024 C706[0000]4001              mov word [x], 320
    31                                  x_loop:
    32                                      ; Z (0.5)
    33 0000002A D906[E400]                  fld dword [_0_5]
    34                                  
    35 0000002E DF06[0200]                  fild word [y]
    36 00000032 D80E[E000]                  fmul dword [_0_005]
    37 00000036 D9C1                        fld st1
    38 00000038 DEE9                        fsub
    39                                  
    40 0000003A DF06[0000]                  fild word [x]
    41 0000003E D80E[E000]                  fmul dword [_0_005]
    42 00000042 D826[E800]                  fsub dword [_0_8]
    43                                  
    44                                      ; expected stack
    45                                      ; ST(0) x
    46                                      ; ST(1) y
    47                                      ; ST(2) z
    48                                      ; ST(3) 0.005
    49                                  
    50 00000046 B80300                      mov ax, 3
    51                                  t_loop:
    52 00000049 D9CA                        fxch st2
    53 0000004B D9C9                        fxch st1
    54                                  
    55                                      ; y' = y*cos - x*sin
    56 0000004D D9C1                        fld     st1
    57 0000004F D80E[0C00]                  fmul dword [cos]
    58 00000053 D9C1                        fld     st1
    59 00000055 D80E[0800]                  fmul dword [sin]
    60 00000059 DEE9                        fsub
    61                                  
    62                                      ; x' = x*cos + y*sin
    63 0000005B D9C1                        fld     st1
    64 0000005D D80E[0C00]                  fmul dword [cos]
    65 00000061 D9C3                        fld     st3
    66 00000063 D80E[0800]                  fmul dword [sin]
    67 00000067 DEC1                        fadd
    68                                  
    69                                      ; Overwrite x with x'
    70 00000069 DDDA                        fstp    st2
    71                                      ; Overwrite y with y'
    72 0000006B DDDA                        fstp    st2
    73                                  
    74 0000006D 48                          dec ax
    75 0000006E 75D9                        jnz t_loop
    76                                  
    77                                      ; Scale
    78 00000070 D9E8                        fld1
    79 00000072 DDDC                        fstp st4
    80                                  
    81                                      ; expected stack
    82                                      ; ST(0) x
    83                                      ; ST(1) y
    84                                      ; ST(2) z
    85                                      ; ST(3) scale
    86                                  
    87                                      ; Appollian loop
    88 00000074 B80400                      mov ax,4
    89                                  a_loop:
    90                                      ; p -= 2.*round(0.5*p);
    91 00000077 D9EE                        fldz
    92 00000079 DDDD                        fstp st5
    93                                  
    94 0000007B BB0300                      mov bx,3
    95                                  r_loop:
    96                                      ; Rotate ST(0..2)
    97 0000007E D9CA                        fxch st2
    98 00000080 D9C9                        fxch st1
    99                                      ; Dupe
   100 00000082 D9C0                        fld     st0
   101                                      ; Divide by 2
   102 00000084 D80E[E400]                  fmul dword [_0_5]
   103 00000088 D9FC                        frndint
   104                                      ; Multiply by 2
   105 0000008A D8C0                        fadd    st0
   106 0000008C DEE9                        fsub
   107                                  
   108 0000008E D9C0                        fld     st0
   109 00000090 D8C8                        fmul    st0
   110 00000092 DEC5                        faddp   st5, st0
   111                                  
   112 00000094 4B                          dec bx
   113 00000095 75E7                        jnz r_loop
   114                                  
   115                                      ; k = 1/dot(p,p)
   116 00000097 D9E8                        fld1
   117 00000099 D8C0                        fadd    st0
   118 0000009B D8F5                        fdiv    st5
   119                                  
   120                                      ; p *= k
   121 0000009D DCC9                        fmul    st1,st0
   122 0000009F DCCA                        fmul    st2,st0
   123 000000A1 DCCB                        fmul    st3,st0
   124                                      ; scale *= k
   125 000000A3 DCCC                        fmul    st4,st0
   126                                  
   127                                      ; Pop k
   128 000000A5 DDD8                        fstp    st0
   129                                  
   130 000000A7 48                          dec ax
   131 000000A8 75CD                        jnz a_loop
   132                                  
   133                                      ; Compute distance
   134 000000AA D9E1                        fabs
   135 000000AC D8F3                        fdiv    st3
   136                                  
   137                                      ; Hacky colors
   138 000000AE D916[0400]                  fst dword [_bits]
   139 000000B2 A0[0700]                    mov al, [_bits+3]
   140 000000B5 2C10                        sub al,16
   141                                  
   142                                      ; Write pixel
   143 000000B7 AA                          stosb
   144                                  
   145                                      ; Clean up stack (if not the DosBox dynamic mode fails)
   146 000000B8 DDD8                        fstp st0
   147 000000BA DDD8                        fstp st0
   148 000000BC DDD8                        fstp st0
   149                                  
   150                                  
   151 000000BE FF0E[0000]                  dec word [x]
   152 000000C2 0F8564FF                    jnz x_loop
   153                                  
   154 000000C6 FF0E[0200]                  dec word [y]
   155 000000CA 0F8556FF                    jnz y_loop
   156                                  
   157 000000CE FF06[EC00]                  inc word [time]
   158                                  
   159                                      ; Check for keypress to exit
   160 000000D2 B401                        mov ah, 1
   161 000000D4 CD16                        int 16h
   162 000000D6 0F8430FF                    jz main_loop
   163                                  
   164                                      ; Restore text mode
   165 000000DA B80300                      mov ax, 0x0003
   166 000000DD CD10                        int 0x10
   167                                  
   168 000000DF C3                          ret
   169                                  
   170                                  ; Data section
   171 000000E0 0AD7A33B                _0_005      dd  0.005
   172 000000E4 0000003F                _0_5        dd  0.5
   173 000000E8 CDCC4C3F                _0_8        dd  0.8
   174                                  
   175 000000EC 0000                    time        dw  0
   176                                  
   177                                  section .bss
   178 00000000 ????                    x           resb 2
   179 00000002 ????                    y           resb 2
   180                                  
   181 00000004 ????????                _bits       resb 4
   182 00000008 ????????                sin         resb 4
   183 0000000C ????????                cos         resb 4
   184                                  
